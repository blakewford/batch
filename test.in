1
250 1 96
volleyball is a team sport in which two teams of six players are separated by a net  each team tries to score points by grounding a ball on the other team s court under organized rules     it has been a part of the official program of the summer olympic games since       a scene of volleyball play in an erwadi village  the complete rules are extensive  but simply  play proceeds as follows  a player on one of the teams begins a  rally  by serving the ball  tossing or releasing it and then hitting it with a hand or arm   from behind the back boundary line of the court  over the net  and into the receiving team s court  the receiving team must not let the ball be grounded within their court  the team may touch the ball up to   times but individual players may not touch the ball twice consecutively  typically  the first two touches are used to set up for an attack  an attempt to direct the ball back over the net 
in such a way that the serving team is unable to prevent it from being grounded in their court  the rally continues  with each team allowed as many as three consecutive touches  until either      a team makes a kill  grounding the ball on the opponent s court and winning the rally  or      a team commits a fault and loses the rally  the team that wins the rally is awarded a point  and serves the ball to start the next rally  a few of the most common faults include  causing the ball to touch the ground or floor outside the opponents  court or without first passing over the net  catching and throwing the ball  double hit  two consecutive contacts with the ball made by the same player  four consecutive contacts with the ball made by the same team  net foul  touching the net during play  foot fault  the foot crosses over the boundary line when serving  the ball is usually played with the hands or arms  but 
players can legally strike or push  short contact  the ball with any part of the body  a number of consistent techniques have evolved in volleyball  including spiking and blocking  because these plays are made above the top of the net  the vertical jump is an athletic skill emphasized in the sport  as well as passing  setting  and specialized player positions and offensive and defensive structures  contents   hide     history     origin of volleyball     refinements and later developments     volleyball in the olympics   rules of the game     the court dimensions     the ball     game play     scoring     libero     recent rule changes   skills     serve     pass     set     attack     block     dig   team play   coaching     basic   strategy     player specialization     formations                                 variations and related games   see also   notes    external links history origin of volleyball william g 
 morgan on february          in holyoke  massachusetts  usa   william g  morgan  a ymca physical education director  created a new game called mintonette as a pastime to be played  preferably  indoors and by any number of players  the game took some of its characteristics from tennis and handball  another indoor sport  basketball  was catching on in the area  having been invented just ten miles  sixteen kilometers  away in the city of springfield  massachusetts  only four years before  mintonette was designed to be an indoor sport  less rough than basketball  for older members of the ymca  while still requiring a bit of athletic effort  the first rules  written down by william g morgan  called for a net   ft   in       m  high  a    ft      ft      m        m  court  and any number of players  a match was composed of nine innings with three serves for each team in each inning  and no limit to the number of ball 
contacts for each team before sending the ball to the opponents  court  in case of a serving error  a second try was allowed  hitting the ball into the net was considered a foul  with loss of the point or a side out  except in the case of the first try serve  after an observer  alfred halstead  noticed the volleying nature of the game at its first exhibition match in       played at the international ymca training school  now called springfield college   the game quickly became known as volleyball  it was originally spelled as two words   volley ball    volleyball rules were slightly modified by the international ymca training school and the game spread around the country to various ymcas        japanese american women playing volleyball  manzanar internment camp  california  ca        refinements and later developments the first official ball used in volleyball is disputed  some sources say that spalding created 
the first official ball in       while others claim it was created in                the rules evolved over time  in the philippines by       the skill and power of the set and spike had been introduced  and four years later a  three hits  rule and a rule against hitting from the back row were established  in       the game was changed from    to    points  in       about        volleyballs were distributed by the american expeditionary forces to their troops and allies  which sparked the growth of volleyball in new countries     the first country outside the united states to adopt volleyball was canada in          an international federation  the f d ration internationale de volleyball  fivb   was founded in       and the first world championships were held in      for men and      for women     the sport is now popular in brazil  in europe  where especially italy  the netherlands  and countries from eastern europe 
have been major forces since the late     s   in russia  and in other countries including china and the rest of asia  as well as in the united states           a nudist naturist volleyball game at the sunny trails club during the      canadian sunbathing association  csa  convention in british columbia  canada  beach volleyball  a variation of the game played on sand and with only two players per team  became a fivb endorsed variation in      and was added to the olympic program at the      summer olympics        volleyball is also a sport at the paralympics managed by the world organization volleyball for disabled  nudists were early adopters of the game with regular organized play in clubs as early as the late     s        by the     s  a volleyball court had become standard in almost all nudist naturist clubs      volleyball in the olympics main article  volleyball at the summer olympics the history of olympic volleyball traces back to 
the      summer olympics in paris  where volleyball was played as part of an american sports demonstration event      after the foundation of fivb and some continental confederations  it began to be considered for official inclusion  in       a special tournament was held at the   rd ioc session in sofia  bulgaria to support such request  the competition was a success  and the sport was officially included in the program for the      summer olympics     the olympic volleyball tournament was originally a simple competition  all teams played against each other team and then were ranked by wins  set average  and point average  one disadvantage of this round robin system is that medal winners could be determined before the end of the games  making the audience lose interest in the outcome of the remaining matches  to cope with this situation  the competition was split into two phases with the addition of a  final 
round  elimination tournament consisting of quarterfinals  semifinals  and finals matches in       the number of teams involved in the olympic tournament has grown steadily since       since       both men s and women s events count twelve participant nations      each of the five continental volleyball confederations has at least one affiliated national federation involved in the olympic games  the u s s r  won men s gold in both      and       after taking bronze in      and silver in       japan finally won the gold for men s volleyball in       women s gold went to japan in      and again in       that year  the introduction of a new offensive skill  the backrow attack  allowed poland to win the men s competition over the soviets in a very tight five set match  since the strongest teams in men s volleyball at the time belonged to the eastern bloc  the american led boycott of the      summer olympics did not 
have as great an effect on these events as it had on the women s  the u s s r  collected their third olympic gold medal in men s volleyball with a     victory over bulgaria  the soviet women won that year as well  their third gold as well   with the u s s r  boycotting the      olympic games in los angeles  the u s  was able to sweep brazil in the finals to win the men s gold medal  italy won its first medal  bronze in the men s competition  in       foreshadowing a rise in prominence for their volleyball teams  the      women s tournament was also won by a rising force  china      at the      games  karch kiraly and steve timmons led the u s  men s team to a second straight gold medal  and the soviets won the fourth gold in the women s tournament  in       underrated brazil upset favourites c i s   netherlands  and italy in the men s competition for the country s first volleyball olympic gold medal  runner up netherlands  men 
s silver medalist in       came back under team leaders ron zwerver and olof van der meulen in the      games for a five set win over italy  a men s bronze medalist in       serbia and montenegro  playing in      and      as the federal republic of yugoslavia  beat russia in the gold medal match in       winning their first gold medal ever  in all three games the strong cuban female team lead by regla torres and mireya luis won the gold medal  in       brazil won its second men s volleyball gold medal beating italy in the finals  while china beat russia for its second women s title  in the      games  the usa beat brazil in the men s volleyball final  brazil was runner up again at the      summer olympics  this time losing to russia after losing two match points in the third set      in both games brazil s women team beat the united states for the gold medal      rules of the game adsf volleyball court the court dimensions 
a volleyball court is    m     ft  long and   m       ft  wide  divided into   m      m halves by a one meter     inch  wide net  the top of the net is      m    ft   in  above the center of the court for men s competition  and      m    ft   in  for women s competition  varied for veterans and junior competitions  the minimum height clearance for indoor volleyball courts is   m     ft   although a clearance of   m     ft  is recommended  a line   m       ft  from and parallel to the net is considered the  attack line   this    meter   or     foot   line divides the court into  back row  and  front row  areas  also back court and front court   these are in turn divided into   areas each  these are numbered as follows  starting from area      which is the position of the serving player  volleyballrotation svg after a team gains the serve  also known as siding out   its members must rotate in a clockwise direction  with the player previously in area     moving to area     and so on  with 
the player from area     moving to area      the team courts are surrounded by an area called the free zone which is a minimum of   meters wide and which the players may enter and play within after the service of the ball      all lines denoting the boundaries of the team court and the attack zone are drawn or painted within the dimensions of the area and are therefore a part of the court or zone  if a ball comes in contact with the line  the ball is considered to be  in   an antenna is placed on each side of the net perpendicular to the sideline and is a vertical extension of the side boundary of the court  a ball passing over the net must pass completely between the antenna  or their theoretical extensions to the ceiling  without contacting them  the ball main article  volleyball  ball  fivb regulations state that the ball must be spherical  made of leather or synthetic leather  have a circumference of       cm  a weight 
of         g and an inside pressure of            kg cm       other governing bodies have similar regulations  game play buddhist monks play volleyball in the himalayan state of sikkim  india  each team consists of six players  to get play started  a team is chosen to serve by coin toss  a player from the serving team throws the ball into the air and attempts to hit the ball so it passes over the net on a course such that it will land in the opposing team s court  the serve   the opposing team must use a combination of no more than three contacts with the volleyball to return the ball to the opponent s side of the net  these contacts usually consist first of the bump or pass so that the ball s trajectory is aimed towards the player designated as the setter  second of the set  usually an over hand pass using wrists to push finger tips at the ball  by the setter so that the ball s trajectory is aimed towards a spot 
where one of the players designated as an attacker can hit it  and third by the attacker who spikes  jumping  raising one arm above the head and hitting the ball so it will move quickly down to the ground on the opponent s court  to return the ball over the net  the team with possession of the ball that is trying to attack the ball as described is said to be on offense  the team on defense attempts to prevent the attacker from directing the ball into their court  players at the net jump and reach above the top  and if possible  across the plane  of the net to block the attacked ball  if the ball is hit around  above  or through the block  the defensive players arranged in the rest of the court attempt to control the ball with a dig  usually a fore arm pass of a hard driven ball   after a successful dig  the team transitions to offense   the game continues in this manner  rallying back and forth  until the ball touches 
the court within the boundaries or until an error is made  the most frequent errors that are made are either to fail to return the ball over the net within the allowed three touches  or to cause the ball to land outside the court  a ball is  in  if any part of it touches a sideline or end line  and a strong spike may compress the ball enough when it lands that a ball which at first appears to be going out may actually be in  players may travel well outside the court to play a ball that has gone over a sideline or end line in the air  other common errors include a player touching the ball twice in succession  a player  catching  the ball  a player touching the net while attempting to play the ball  or a player penetrating under the net into the opponent s court  there are a large number of other errors specified in the rules  although most of them are infrequent occurrences  these errors include back row or 
libero players spiking the ball or blocking  back row players may spike the ball if they jump from behind the attack line   players not being in the correct position when the ball is served  attacking the serve in the front court and above the height of the net  using another player as a source of support to reach the ball  stepping over the back boundary line when serving  taking more than   seconds to serve      or playing the ball when it is above the opponent s court  scoring scorer s table just before a game when the ball contacts the floor within the court boundaries or an error is made  the team that did not make the error is awarded a point  whether they served the ball or not  if the ball hits the line  the ball is counted as in  the team that won the point serves for the next point  if the team that won the point served in the previous point  the same player serves again  if the team that won the 
point did not serve the previous point  the players of the team rotate their position on the court in a clockwise manner  the game continues  with the first team to score    points by a two point margin is awarded the set  matches are best of five sets and the fifth set  if necessary  is usually played to    points   scoring differs between leagues  tournaments  and levels  high schools sometimes play best of three to     in the ncaa matches are played best of five to    as of the      season       before       points could be scored only when a team had the serve  side out scoring  and all sets went up to only    points  the fivb changed the rules in       with the changes being compulsory in       to use the current scoring system  formerly known as rally point system   primarily to make the length of the match more predictable and to make the game more spectator  and television friendly  the final year of side 
out scoring at the ncaa division i women s volleyball championship was       rally point scoring debuted in      and games were played to    points through       for the      season  games were renamed  sets  and reduced to    points to win  libero in      the libero player was introduced internationally      the libero is a player specialized in defensive skills  the libero must wear a contrasting jersey color from his or her teammates and cannot block or attack the ball when it is entirely above net height  when the ball is not in play  the libero can replace any back row player  without prior notice to the officials  this replacement does not count against the substitution limit each team is allowed per set  although the libero may be replaced only by the player whom he or she replaced  the libero may function as a setter only under certain restrictions  if she he makes an overhand set  she he must be standing 
behind  and not stepping on  the   meter line  otherwise  the ball cannot be attacked above the net in front of the   meter line  an underhand pass is allowed from any part of the court  the libero is  generally  the most skilled defensive player on the team  there is also a libero tracking sheet  where the referees or officiating team must keep track of whom the libero subs in and out for  there may only be one libero per set  game   although there may be a different libero in the beginning of any new set  game   furthermore  a libero is not allowed to serve  according to international rules  with the exception of the ncaa women s volleyball games  where a      rule change allows the libero to serve  but only in a specific rotation  that is  the libero can only serve for one person  not for all of the people for whom she goes in  that rule change was also applied to high school and junior high play soon after  recent 
rule changes other rule changes enacted in      include allowing serves in which the ball touches the net  as long as it goes over the net into the opponents  court  also  the service area was expanded to allow players to serve from anywhere behind the end line but still within the theoretical extension of the sidelines  other changes were made to lighten up calls on faults for carries and double touches  such as allowing multiple contacts by a single player   double hits   on a team s first contact provided that they are a part of a single play on the ball  in       the ncaa changed the minimum number of points needed to win any of the first four sets from    to    for women s volleyball  men s volleyball remained at      if a fifth  deciding  set is reached  the minimum required score remains at     in addition  the word  game  is now referred to as  set       changes in rules have been studied and announced by the fivb in recent 
years  and they have released the updated rules in           skills competitive teams master six basic skills  serve  pass  set  attack  block and dig  each of these skills comprises a number of specific techniques that have been introduced over the years and are now considered standard practice in high level volleyball  serve setting up for an overhand serve  a player making a jump serve  a player stands behind the inline and serves the ball  in an attempt to drive it into the opponent s court  his or her main objective is to make it land inside the court  it is also desirable to set the ball s direction  speed and acceleration so that it becomes difficult for the receiver to handle it properly  a serve is called an  ace  when the ball lands directly onto the court or travels outside the court after being touched by an opponent  in contemporary volleyball  many types of serves are employed  underhand  a serve in which the player 
strikes the ball below the waist instead of tossing it up and striking it with an overhand throwing motion  underhand serves are considered very easy to receive and are rarely employed in high level competitions  sky ball serve  a specific type of underhand serve occasionally used in beach volleyball  where the ball is hit so high it comes down almost in a straight line  this serve was invented and employed almost exclusively by the brazilian team in the early     s and is now considered outdated  in brazil  this serve is called jornada nas estrelas  star trek   topspin  an overhand serve where the player tosses the ball high and hits it with a wrist span  giving it topspin which causes it to drop faster than it would otherwise and helps maintain a straight flight path  topspin serves are generally hit hard and aimed at a specific returner or part of the court  standing topspin serves are rarely used above the high 
school level of play  float  an overhand serve where the ball is hit with no spin so that its path becomes unpredictable  akin to a knuckleball in baseball  jump serve  an overhand serve where the ball is first tossed high in the air  then the player makes a timed approach and jumps to make contact with the ball  hitting it with much pace and topspin  this is the most popular serve amongst college and professional teams  jump float  an overhand serve where the ball is tossed high enough that the player may jump before hitting it similarly to a standing float serve  the ball is tossed lower than a topspin jump serve  but contact is still made while in the air  this serve is becoming more popular amongst college and professional players because it has a certain unpredictability in its flight pattern  pass a player making a forearm pass or bump  also called reception  the pass is the attempt by a team to properly 
handle the opponent s serve  or any form of attack  proper handling includes not only preventing the ball from touching the court  but also making it reach the position where the setter is standing quickly and precisely  the skill of passing involves fundamentally two specific techniques  underarm pass  or bump  where the ball touches the inside part of the joined forearms or platform  at waist line  and overhand pass  where it is handled with the fingertips  like a set  above the head  either are acceptable in professional and beach volleyball  however there are much tighter regulations on the overhand pass in beach volleyball  set jump set the set is usually the second contact that a team makes with the ball  the main goal of setting is to put the ball in the air in such a way that it can be driven by an attack into the opponent s court  the setter coordinates the offensive movements of a team  and is the player who ultimately 
decides which player will actually attack the ball  as with passing  one may distinguish between an overhand and a bump set  since the former allows for more control over the speed and direction of the ball  the bump is used only when the ball is so low it cannot be properly handled with fingertips  or in beach volleyball where rules regulating overhand setting are more stringent  in the case of a set  one also speaks of a front or back set  meaning whether the ball is passed in the direction the setter is facing or behind the setter  there is also a jump set that is used when the ball is too close to the net  in this case the setter usually jumps off his or her right foot straight up to avoid going into the net  the setter usually stands about   of the way from the left to the right of the net and faces the left  the larger portion of net that he or she can see   sometimes a setter refrains from raising the ball 
for a teammate to perform an attack and tries to play it directly onto the opponent s court  this movement is called a  dump       this can only be performed when the setter is in the front row  otherwise it constitutes an illegal back court attack  the most common dumps are to  throw  the ball behind the setter or in front of the setter to zones   and    more experienced setters toss the ball into the deep corners or spike the ball on the second hit  attack a spanish player  in red outfit  about to spike towards the portuguese field  whose players try to block the way  the attack  also known as the spike  is usually the third contact a team makes with the ball  the object of attacking is to handle the ball so that it lands on the opponent s court and cannot be defended  a player makes a series of steps  the  approach    jumps  and swings at the ball  ideally the contact with the ball is made at the apex of 
the hitter s jump  at the moment of contact  the hitter s arm is fully extended above his or her head and slightly forward  making the highest possible contact while maintaining the ability to deliver a powerful hit  the hitter uses arm swing  wrist snap  and a rapid forward contraction of the entire body to drive the ball  a  bounce  is a slang term for a very hard loud spike that follows an almost straight trajectory steeply downward into the opponent s court and bounces very high into the air  a  kill  is the slang term for an attack that is not returned by the other team thus resulting in a point  contemporary volleyball comprises a number of attacking techniques  backcourt  or backrow  pipe attack  an attack performed by a back row player  the player must jump from behind the   meter line before making contact with the ball  but may land in front of the   meter line  line and cross court shot  refers to whether the ball 
flies in a straight trajectory parallel to the side lines  or crosses through the court in an angle  a cross court shot with a very pronounced angle  resulting in the ball landing near the   meter line  is called a cut shot  dip dink tip cheat dump  the player does not try to make a hit  but touches the ball lightly  so that it lands on an area of the opponent s court that is not being covered by the defense  tool wipe block abuse  the player does not try to make a hard spike  but hits the ball so that it touches the opponent s block and then bounces off court  off speed hit  the player does not hit the ball hard  reducing its speed and thus confusing the opponent s defense  quick hit  one   an attack  usually by the middle blocker  where the approach and jump begin before the setter contacts the ball  the set  called a  quick set   is placed only slightly above the net and the ball is struck by the hitter 
almost immediately after leaving the setter s hands  quick attacks are often effective because they isolate the middle blocker to be the only blocker on the hit  slide  a variation of the quick hit that uses a low back set  the middle hitter steps around the setter and hits from behind him or her  double quick hit  stack   tandem   a variation of quick hit where two hitters  one in front and one behind the setter or both in front of the setter  jump to perform a quick hit at the same time  it can be used to deceive opposite blockers and free a fourth hitter attacking from backcourt  maybe without block at all  block   players performing a block blocking refers to the actions taken by players standing at the net to stop or alter an opponent s attack  a block that is aimed at completely stopping an attack  thus making the ball remain in the opponent s court  is called offensive  a well executed offensive block is performed 
by jumping and reaching to penetrate with one s arms and hands over the net and into the opponent s area  it requires anticipating the direction the ball will go once the attack takes place  it may also require calculating the best foot work to executing the  perfect  block  the jump should be timed so as to intercept the ball s trajectory prior to it crossing over the net  palms are held deflected downward about       degrees toward the interior of the opponents court  a  roof  is a spectacular offensive block that redirects the power and speed of the attack straight down to the attacker s floor  as if the attacker hit the ball into the underside of a peaked house roof  by contrast  it is called a defensive  or  soft  block if the goal is to control and deflect the hard driven ball up so that it slows down and becomes more easy to be defended  a well executed soft block is performed by jumping and placing one s hands above the 
net with no penetration into the opponent s court and with the palms up and fingers pointing backward  blocking is also classified according to the number of players involved  thus  one may speak of single  or solo   double  or triple block  successful blocking does not always result in a  roof  and many times does not even touch the ball  while it s obvious that a block was a success when the attacker is roofed  a block that consistently forces the attacker away from his or her  power  or preferred attack into a more easily controlled shot by the defense is also a highly successful block  at the same time  the block position influences the positions where other defenders place themselves while opponent hitters are spiking  dig main article  volleyball dig player going for a dig  digging is the ability to prevent the ball from touching one s court after a spike or attack  particularly a ball that is nearly touching the 
ground  in many aspects  this skill is similar to passing  or bumping  overhand dig and bump are also used to distinguish between defensive actions taken with fingertips or with joined arms  it varies from passing however in that is it a much more reflex based skill  especially at the higher levels  it is especially important while digging for players to stay on their toes  several players choose to employ a split step to make sure they re ready to move in any direction  some specific techniques are more common in digging than in passing  a player may sometimes perform a  dive   i e   throw his or her body in the air with a forward movement in an attempt to save the ball  and land on his or her chest  when the player also slides his or her hand under a ball that is almost touching the court  this is called a  pancake   the pancake is frequently used in indoor volleyball  but rarely if ever in beach volleyball because 
the uneven and infirm nature of the sand court limits the chances that the ball will make a good  clean contact with the hand  when used correctly  it is one of the more spectacular defensive volleyball plays  sometimes a player may also be forced to drop his or her body quickly to the floor to save the ball  in this situation  the player makes use of a specific rolling technique to minimize the chances of injuries  team play volleyball is essentially a game of transition from one of the above skills to the next  with choreographed team movement between plays on the ball  these team movements are determined by the teams chosen serve receive system  offensive system  coverage system  and defensive system  the serve receive system is the formation used by the receiving team to attempt to pass the ball to the designated setter  systems can consist of   receivers    receivers    receivers  and in some cases   receivers  the most 
popular formation at higher levels is a   receiver formation consisting of two left sides and a libero receiving every rotation  this allows middles and right sides to become more specialized at hitting and blocking  offensive systems are the formations used by the offense to attempt to ground the ball into the opposing court  or otherwise score points   formations often include designated player positions with skill specialization  see player specialization  below   popular formations include the           and     systems  see formations  below   there are also several different attacking schemes teams can use to keep the opposing defense off balance  coverage systems are the formations used by the offense to protect their court in the case of a blocked attack  executed by the   offensive players not directly attacking the ball  players move to assigned positions around the attacker to dig up any ball that deflects off the block back 
into their own court  popular formations include the     system and the       system  in lieu of a system  some teams just use a random coverage with the players nearest the hitter  defensive systems are the formations used by the defense to protect against the ball being grounded into their court by the opposing team  the system will outline which players are responsible for which areas of the court depending on where the opposing team is attacking from  popular systems include the   up    back deep  and   back slide defense  there are also several different blocking schemes teams can employ to disrupt the opposing teams offense  some teams  when they are ready to serve  will line up their other five players in a screen to obscure the view of the receiving team  this action is only illegal if the server makes use of the screen  so the call is made at the referees discretion as to the impact the screen made on the receivers 
ability to pass the ball  the most common style of screening involves a w formation designed to take up as much horizontal space as possible  coaching basic coaching for volleyball can be classified under two main categories  match coaching and developmental coaching  the objective of match coaching is to win a match by managing a team s strategy  developmental coaching emphasizes player development through the reinforcement of basic skills during exercises known as  drills   drills promote repetition and refinement of volleyball movements  particularly in footwork patterns  body positioning relative to others  and ball contact  a coach will construct drills that simulate match situations thereby encouraging speed of movement  anticipation  timing  communication  and team work  at the various stages of a player s career  a coach will tailor drills to meet the strategic requirements of the team  the american volleyball coaches association 
is the largest organization in the world dedicated exclusively to volleyball coaching  strategy an image from an international match between italy and russia in       a russian player on the left has just served  with three men of his team next to the net moving to their assigned block positions from the starting ones  two others  in the back row positions  are preparing for defense  italy  on the right  has three men in a line  each preparing to pass if the ball reaches him  the setter is waiting for their pass while the middle hitter with no     will jump for a quick hit if the pass is good enough  alessandro fei  no      has no passing duties and is preparing for a back row hit on the right side of the field  note the two liberos with different color dress  middle hitters blockers are commonly substituted by liberos in their back row positions  player specialization there are   positions filled on every volleyball 
team at the elite level  setter  outside hitter left side hitter  middle hitter  opposite hitter right side hitter and libero defensive specialist  each of these positions plays a specific  key role in winning a volleyball match  setters have the task for orchestrating the offense of the team  they aim for second touch and their main responsibility is to place the ball in the air where the attackers can place the ball into the opponents  court for a point  they have to be able to operate with the hitters  manage the tempo of their side of the court and choose the right attackers to set  setters need to have swift and skillful appraisal and tactical accuracy  and must be quick at moving around the court  liberos are defensive players who are responsible for receiving the attack or serve  they are usually the players on the court with the quickest reaction time and best passing skills  libero means  free  in italian they receive this name 
as they have the ability to substitute for any other player on the court during each play  they do not necessarily need to be tall  as they never play at the net  which allows shorter players with strong passing and defensive skills to excel in the position and play an important role in the team s success  a player designated as a libero for a match may not play other roles during that match  liberos wear a different color jersey than their teammates  middle blockers or middle hitters are players that can perform very fast attacks that usually take place near the setter  they are specialized in blocking  since they must attempt to stop equally fast plays from their opponents and then quickly set up a double block at the sides of the court  in non beginners play  every team will have two middle hitters  outside hitters or left side hitters attack from near the left antenna  the outside hitter is usually the most consistent 
hitter on the team and gets the most sets  inaccurate first passes usually result in a set to the outside hitter rather than middle or opposite  since most sets to the outside are high  the outside hitter may take a longer approach  always starting from outside the court sideline  in non beginners play  there are again two outside hitters on every team in every match  opposite hitters or right side hitters carry the defensive workload for a volleyball team in the front row  their primary responsibilities are to put up a well formed block against the opponents  outside hitters and serve as a backup setter  sets to the opposite usually go to the right side of the antennae  at some levels where substitutions are unlimited  teams will make use of a defensive specialist in place of or in addition to a libero  this position does not have unique rules like the libero position  instead  these players are used to substitute out 
a poor back row defender using regular substitution rules  a defensive specialist is often used if you have a particularly poor back court defender in right side or left side  but your team is already using a libero to take out your middles  most often  the situation involves a team using a right side player with a big block who must be subbed out in the back row because they aren t able to effectively play back court defense  similarly  teams might use a serving specialist to sub out a poor server situationally  formations the three standard volleyball formations are known as               and        which refers to the number of hitters and setters respectively      is a basic formation used only in beginners  play  while     is by far the most common formation in high level play      the     formation has four hitters and two setters  the setters usually set from the middle front or right front position  the 
team will therefore have two front row attackers at all times  in the international      the setters set from the right front position  the international     translates more easily into other forms of offense  the setters line up opposite each other in the rotation  the typical lineup has two outside hitters  by aligning like positions opposite themselves in the rotation  there will always be one of each position in the front and back rows  after service  the players in the front row move into their assigned positions  so that the setter is always in middle front  alternatively  the setter moves into the right front and has both a middle and an outside attacker  the disadvantage here lies in the lack of an offside hitter  allowing one of the other team s blockers to  cheat in  on a middle block  the clear disadvantage to this offensive formation is that there are only two attackers  leaving a team with fewer offensive 
weapons  another aspect is to see the setter as an attacking force  albeit a weakened force  because when the setter is in the front court they are able to  tip  or  dump   so when the ball is close to the net on the second touch  the setter may opt to hit the ball over with one hand  this means that the blocker who would otherwise not have to block the setter is engaged and may allow one of the hitters to have an easier attack      in the     formation  a player always comes forward from the back row to set  the three front row players are all in attacking positions  thus  all six players act as hitters at one time or another  while two can act as setters  so the     formation is actually a     system  but the back row setter penetrates to set  the     lineup thus requires two setters  who line up opposite to each other in the rotation  in addition to the setters  a typical lineup will have two middle hitters 
and two outside hitters  by aligning like positions opposite themselves in the rotation  there will always be one of each position in the front and back rows  after service  the players in the front row move into their assigned positions  the advantage of the     is that there are always three front row hitters available  maximizing the offensive possibilities  however  not only does the     require a team to possess two people capable of performing the highly specialized role of setter  it also requires both of those players to be effective offensive hitters when not in the setter position  at the international level  only the cuban national women s team employs this kind of formation  it is also used in women s ncaa play  partially due to the variant rules used which allow        substitutions per set  as opposed to the   allowed in the standard rules       the     formation has only one player who assumes setting responsibilities 
regardless of his or her position in the rotation  the team will therefore have three front row attackers when the setter is in the back row  and only two when the setter is in the front row  for a total of five possible attackers  the player opposite the setter in a     rotation is called the opposite hitter  in general  opposite hitters do not pass  they stand behind their teammates when the opponent is serving  the opposite hitter may be used as a third attack option  back row attack  when the setter is in the front row  this is the normal option used to increase the attack capabilities of modern volleyball teams  normally the opposite hitter is the most technical skilled hitter of the team  back row attacks generally come from the back right position  known as zone    but are increasingly performed from back center in high level play  the big advantage of this system is that the setter always has   hitters to vary 
sets with  if the setter does this well  the opponent s middle blocker may not have enough time to block with the outside blocker  increasing the chance for the attacking team to make a point  there is another advantage  the same as that of a     formation  when the setter is a front row player  he or she is allowed to jump and  dump  the ball onto the opponent s side  this too can confuse the opponent s blocking players  the setter can jump and dump or can set to one of the hitters  a good setter knows this and thus won t only jump to dump or to set for a quick hit  but when setting outside as well to confuse the opponent  the     offense is actually a mix of     and      when the setter is in the front row  the offense looks like a      when the setter is in the back row  the offense looks like a      variations and related games main article  volleyball variations there are many variations on the basic rules of 
volleyball  by far the most popular of these is beach volleyball  which is played on sand with two people per team  and rivals the main sport in popularity  some games related to volleyball include  beach volleyball  a game of indoor volleyball played with a beach ball instead of a volleyball  buka ball  this is a rather similar game played only with the feet  ecua volley  a variant invented in ecuador  with some significant variants  such as number of players  and a heavier ball  footvolley  a sport from brazil in which the hands and arms are not used but most else is like beach volleyball  hooverball  popularized by president herbert hoover  it is played with a volleyball net and a medicine ball  it is scored like tennis  but the ball is caught and then thrown back  the weight of the medicine ball can make the sport to be quite physically demanding  annual championship tournaments are held annually in west branch  iowa 
 newcomb ball  sometimes spelled  nuke  em    in this game  the ball is caught and thrown instead of hit  it rivaled volleyball in popularity until the     s  prisoner ball  also played with volleyball court and a volleyball  prisoner ball is a variation of newcomb ball where players are  taken prisoner  or released from  prison  instead of scoring points  usually played by young children      sepak takraw  played in southeast asia using a rattan ball and allowing only players  feet  knees  chest  and head to touch the ball  throwball  became popular with women players at the ymca college of physical education in chennai  india  in the     s  wallyball  a variation of volleyball played in a racquetball court with a rubber ball  see also list of volleyball players list of volleyball video games volley squash volleyball hall of fame volleyball jargon notes saori sakoda  sakoda saori  born december           is a japanese volleyball 
player who plays for toray arrows  she also plays for the all japan women s volleyball team contents   hide     clubs   awards     individual     team     national team   references   external links clubs edit  japan kagoshima nishi high school japan toray arrows         awards edit  individual edit       asian club championship  best scorer       v league  japan   best    best server      kurowashiki tournament best       fivb women s world grand champions cup   best outside hitter         v premier league   best   best scorer team edit       domestic sports festival  volleyball    simple cup icon svg champion  with toray arrows            empress s cup   simple cup icon svg champion  with toray arrows            v premier league   simple cup icon svg champion  with toray arrows       domestic sports festival   gorm silver cup jpg runner up  with toray arrows       asian club championship   med   png bronze 
medal with toray arrows           v premier league   simple cup icon svg champion  with toray arrows       kurowashiki all japan volleyball championship   simple cup icon svg champion  with toray arrows            v premier league   simple cup icon svg champion  with toray arrows       kurowashiki all japan volleyball championship   simple cup icon svg champion  with toray arrows            empress s cup   gorm silver cup jpg runner up  with toray arrows            v premier league   gorm silver cup jpg runner up  with toray arrows            empress s cup   simple cup icon svg champion  with toray arrows            v premier league   simple cup icon svg champion  with toray arrows  national team edit       world championship   med   png bronze medal      montreux volley masters   simple cup icon svg champion      asian championship   med   png silver medal      olympics   med   png bronze medal      world grand champion 
cup   med   png bronze medal bash                                                                   bash    n na am me e        bash   gnu bourne again shell s sy yn no op ps si is s        b ba as sh h  options   file  c co op py yr ri ig gh ht t        bash is copyright  c            by the free software foundation  inc  d de es sc cr ri ip pt ti io on n        b ba as sh h  is  an  s sh h compatible  command language interpreter that executes        commands read from the standard input or from a file   b ba as sh h also incor         porates useful features from the   k  o  r  n and   c shells  k ks sh h and c cs sh h          b ba as sh h  is  intended  to  be a conformant implementation of the shell and        utilities portion  of  the  ieee  posix  specification   ieee  standard                  b ba as sh h can be configured to be posix conformant by default  o op pt ti io on ns s        in  addition  to  the  single character shell options documented in the        description 
of the s se et t builtin command  b ba as sh h interprets  the  following        options when it is invoked            c c   s  t  r  i  n  g if  the     c c  option  is  present  then commands are read from                    s  t  r  i  n  g   if there are arguments after the    s  t  r  i  n  g   they  are                  assigned to the positional parameters  starting with                   i i        if the    i i option is present  the shell is   i  n  t  e  r  a  c  t  i  v  e            l l        make b ba as sh h act as if it had been invoked as a login shell  see                  i in nv vo oc ca at ti io on n below             r r        if the    r r option is present   the  shell  becomes    r  e  s  t  r  i  c  t  e  d                   see r re es st tr ri ic ct te ed d s sh he el ll l below             s s        if  the    s s option is present  or if no arguments remain after                  option processing  then commands are read from  the  standard       
           input    this  option  allows the positional parameters to be                  set when invoking an interactive shell            d d        a list of all double quoted strings preceded by     is  printed                  on  the standard output   these are the strings that are sub                   ject to language translation when the current locale is not c c                  or  p po os si ix x    this  implies the    n n option  no commands will be                  executed                     o o      s  h  o  p  t     o  p  t  i  o  n                       s  h  o  p  t     o  p  t  i  o  n is one of the  shell  options  accepted  by  the                  s sh ho op pt t   builtin   see  s sh he el ll l  b bu ui il lt ti in n  c co om mm ma an nd ds s  below     if                    s  h  o  p  t     o  p  t  i  o  n is present     o o sets the value of that option     o o                  unsets 
 it    if    s  h  o  p  t     o  p  t  i  o  n is not supplied  the names and                  values of the shell options accepted by s sh ho op pt t are printed  on                  the  standard  output    if  the invocation option is    o o  the                  output is displayed in a format that may be reused as  input                       a          signals the end of options and disables further option                  processing   any arguments after the        are treated as  file                   names and arguments   an argument of     is equivalent to                b ba as sh h  also  interprets  a  number  of  multi character  options   these        options must appear on the command  line  before  the  single character        options to be recognized               d de eb bu ug gg ge er r               arrange for the debugger profile to be executed before the shell               starts   turns on extended debugging mode  see  the  description               of 
 the  e ex xt td de eb bu ug g  option  to the s sh ho op pt t builtin below  and shell               function tracing  see the description of the    o o f fu un nc ct tr ra ac ce e option               to the s se et t builtin below                d du um mp p   p po o   s st tr ri in ng gs s               equivalent  to    d d  but the output is in the gnu   g  e  t  t  e  x  t p po o  por                table object  file format               d du um mp p   s st tr ri in ng gs s               equivalent to    d d               h he el lp p display a usage message on standard  output  and  exit  success                fully               i in ni it t   f fi il le e   f  i  l  e              r rc cf fi il le e   f  i  l  e               execute commands from   f  i  l  e instead of the standard personal ini                tialization file            b  a  s  h  r  c if  the  shell  is  interactive   see            
   i in nv vo oc ca at ti io on n below                l lo og gi in n               equivalent to    l l               n no oe ed di it ti in ng g               do  not  use the gnu r re ea ad dl li in ne e library to read command lines when               the shell is interactive               n no op pr ro of fi il le e               do not read either the system wide startup file      e  t  c     p  r  o  f  i  l  e  or               any   of  the  personal  initialization  files             b  a  s  h     p  r  o  f  i  l  e                           b  a  s  h     l  o  g  i  n  or            p  r  o  f  i  l  e    by  default   b ba as sh h  reads  these               files  when  it  is  invoked  as  a  login shell  see i in nv vo oc ca at ti io on n               below                n no or rc c do  not  read  and  execute  the  personal  initialization  file                          b  a  s  h  r  c  if  the  shell  is interactive   this option is on by               default 
if the shell is invoked as s sh h               p po os si ix x               change the behavior of b ba as sh h where the default operation  differs               from the posix standard to match the standard    p  o  s  i  x   m  o  d  e                r re es st tr ri ic ct te ed d               the shell becomes restricted  see r re es st tr ri ic ct te ed d s sh he el ll l below                v ve er rb bo os se e               equivalent to     v v               v ve er rs si io on n               show  version information for this instance of b ba as sh h on the stan                dard output and exit successfully  a ar rg gu um me en nt ts s        if arguments remain after option processing  and neither the    c c nor the           s s  option  has  been supplied  the first argument is assumed to be the        name of a file containing shell commands   if b ba as sh h is invoked  in  this        fashion          is set to the name of the file  and the positional parame 
        ters are set to the remaining arguments   b ba as sh h reads and executes  com         mands  from this file  then exits   b ba as sh h s exit status is the exit sta         tus of the last command executed in the script    if  no  commands  are        executed   the  exit status is     an attempt is first made to open the        file in the current directory  and  if no file is found  then the shell        searches the directories in p pa at th h for the script  i in nv vo oc ca at ti io on n        a    l  o  g  i  n   s  h  e  l  l is one whose first character of argument zero is a      or        one started with the       l lo og gi in n option         an   i  n  t  e  r  a  c  t  i  v  e shell is one started without  non option  arguments  and        without the    c c option whose standard input and error are both connected        to terminals  as determined by   i  s  a  t  t  y      or one started with  the     i i        option    p ps s    is set and        includes i 
i if b ba as sh h is interactive  allowing        a shell script or a startup file to test this state         the following paragraphs describe how b ba as sh h executes its startup  files         if  any  of  the files exist but cannot be read  b ba as sh h reports an error         tildes are expanded in file names as described below under t ti il ld de e e ex xp pa an n           s si io on n in the e ex xp pa an ns si io on n section         when  b ba as sh h is invoked as an interactive login shell  or as a non inter         active shell with the       l lo og gi in n option  it first reads and executes  com         mands  from  the file      e  t  c     p  r  o  f  i  l  e  if that file exists   after reading        that file  it looks for            b  a  s  h     p  r  o  f  i  l  e             b  a  s  h     l  o  g  i  n  and            p  r  o  f  i  l  e         in  that order  and reads and executes commands from the first one that        exists and is readable   the     
  n no op pr ro of fi il le e option may be  used  when  the        shell is started to inhibit this behavior         when  a  login  shell  exits  b ba as sh h reads and executes commands from the        file            b  a  s  h     l  o  g  o  u  t  if it exists         when an interactive shell that is not a login shell  is  started   b ba as sh h        reads  and executes commands from            b  a  s  h  r  c  if that file exists   this        may be inhibited by using the       n no or rc c option   the       r rc cf fi il le e   f  i  l  e  option        will  force  b ba as sh h  to  read  and  execute commands from   f  i  l  e instead of                   b  a  s  h  r  c         when b ba as sh h is started non interactively  to  run  a  shell  script   for        example  it looks for the variable b ba as sh h   e en nv v in the environment  expands        its value if it appears there  and uses the expanded value as the  name        of  a  file to read and execute  
 b ba as sh h behaves as if the following com         mand were executed                if    n   bash env     then     bash env   fi        but the value of the p pa at th h variable is not used to search for  the  file        name         if  b ba as sh h  is  invoked  with  the name s sh h  it tries to mimic the startup        behavior of historical versions of s sh h as  closely  as  possible   while        conforming  to the posix standard as well   when invoked as an interac         tive login shell  or a non interactive shell with the        l lo og gi in n  option         it  first  attempts  to read and execute commands from      e  t  c     p  r  o  f  i  l  e and                   p  r  o  f  i  l  e  in that order   the        n no op pr ro of fi il le e  option  may  be  used  to        inhibit  this  behavior   when invoked as an interactive shell with the        name s sh h  b ba as sh h looks for the variable e en nv v  expands its value  if  it  is        defined 
  and uses the expanded value as the name of a file to read and        execute   since a shell invoked as s sh h does not attempt to read and exe         cute  commands from any other startup files  the       r rc cf fi il le e option has no        effect   a non interactive shell invoked with  the  name  s sh h  does  not        attempt  to  read  any  other  startup files   when invoked as s sh h  b ba as sh h        enters   p  o  s  i  x mode after the startup files are read         when b ba as sh h is started in   p  o  s  i  x mode  as with the        p po os si ix x  command  line        option  it follows the posix standard for startup files   in this mode         interactive shells expand the e en nv v variable and commands  are  read  and        executed  from  the  file  whose  name is the expanded value   no other        startup files are read         b ba as sh h attempts to determine when it is 
being run  by  the  remote  shell        daemon   usually    r  s  h  d   if b ba as sh h determines it is being run by   r  s  h  d  it        reads and executes commands from            b  a  s  h  r  c  if that file exists and  is        readable   it will not do this if invoked as s sh h   the       n no or rc c option may        be used to inhibit this behavior  and the       r rc cf fi il le e option may  be  used        to  force  another  file to be read  but   r  s  h  d does not generally invoke        the shell with those options or allow them to be specified         if the shell is started with the effective user  group  id not equal to        the real user  group  id  and the    p p option is not supplied  no startup        files are read  shell functions are not inherited from the environment         the  s sh he el ll lo op pt ts s  variable  if it appears in the environment  is ignored         and the effective 
user id is set to the real user id   if the    p p option        is  supplied  at  invocation  the startup behavior is the same  but the        effective user id is not reset  d de ef fi in ni it ti io on ns s        the following definitions are used throughout the rest  of  this  docu         ment         b bl la an nk k  a space or tab         w wo or rd d   a  sequence  of  characters  considered  as a single unit by the               shell   also known as a t to ok ke en n         n na am me e   a   w  o  r  d consisting only of  alphanumeric  characters  and  under                scores   and beginning with an alphabetic character or an under                score   also referred to as an i id de en nt ti if fi ie er r         m me et ta ac ch ha ar ra ac ct te er r               a character that  when unquoted  separates words    one  of  the               following                                             s sp pa ac ce e t ta ab b        c co on nt tr ro ol l o op pe er 
ra at to or r               a   t  o  k  e  n that performs a control function   it is one of the fol                lowing symbols                                                            n ne ew wl li in ne e    r re es se er rv ve ed d w wo or rd ds s          r  e  s  e  r  v  e  d   w  o  r  d  s are words that have a special meaning to the shell   the        following words are recognized as reserved when unquoted and either the        first word of a simple command  see s sh he el ll l g gr ra am mm ma ar r below  or  the  third        word of a c ca as se e or f fo or r command              c ca as se e  d do o d do on ne e e el li if f e el ls se e e es sa ac c f fi i f fo or r f fu un nc ct ti io on n i if f i in n s se el le ec ct t t th he en n u un nt ti il l        w wh hi il le e         t ti im me e               s sh he el ll l g gr ra am mm ma ar r    s si im mp pl le e c co om mm 
ma an nd ds s        a   s  i  m  p  l  e   c  o  m  m  a  n  d is a sequence of optional  variable  assignments  fol         lowed  by  b bl la an nk k separated  words and redirections  and terminated by a          c  o  n  t  r  o  l   o  p  e  r  a  t  o  r   the first word specifies the command to be executed         and  is  passed  as  argument  zero   the remaining words are passed as        arguments to the invoked command         the return value of a   s  i  m  p  l  e   c  o  m  m  a  n  d is its exit status   or        n  if        the command is terminated by signal   n      p pi ip pe el li in ne es s        a   p  i  p  e  l  i  n  e is a sequence of one or more commands separated by the char         acter       the format for a pipeline is                 t ti im me e     p p           c  o  m  m  a  n  d         c  o  m  m  a  n  d                 the standard output of   c  o  m  m  a  n  d is connected 
via a pipe to the  standard        input  of    c  o  m  m  a  n  d       this connection is performed before any redirec         tions specified by the command  see r re ed di ir re ec ct ti io on n below          the return status of a pipeline is the exit status of the last command         unless  the  p pi ip pe ef fa ai il l  option  is enabled   if p pi ip pe ef fa ai il l is enabled  the        pipeline s return status is the value of the last   rightmost   command        to  exit  with a non zero status  or zero if all commands exit success         fully   if the reserved word      precedes a pipeline  the exit status of        that  pipeline  is the logical negation of the exit status as described        above   the shell waits for all commands in the pipeline  to  terminate        before returning a value         if  the  t ti im me e reserved word precedes a pipeline  the elapsed as well as        user and 
system time consumed by its execution are  reported  when  the        pipeline  terminates    the    p p option changes the output format to that        specified by posix   the t ti im me ef fo or rm ma at t variable may be  set  to  a  format        string  that  specifies how the timing information should be displayed         see the description of t ti im me ef fo or rm ma at t under s sh he el ll l v va ar ri ia ab bl le es s below         each command in a pipeline is executed as a separate process  i e    in        a subshell      l li is st ts s        a    l  i  s  t  is a sequence of one or more pipelines separated by one of the        operators                   or         and optionally terminated by one of           or           n ne ew wl li in ne e            of these list operators         and        have equal precedence  followed by            and        which have equal precedence         a sequence 
of one or more newlines may appear in a   l  i  s  t  instead  of  a        semicolon to delimit commands         if  a  command  is terminated by the control operator      the shell exe         cutes the command in the   b  a  c  k  g  r  o  u  n  d in a subshell   the shell does  not        wait  for  the command to finish  and the return status is     commands        separated by a     are executed sequentially  the shell  waits  for  each        command  to terminate in turn   the return status is the exit status of        the last command executed         the control operators        and        denote and lists and or lists   respec         tively   an and list has the form                 c  o  m  m  a  n  d             c  o  m  m  a  n  d             c  o  m  m  a  n  d     is  executed if  and only if    c  o  m  m  a  n  d    returns an exit status        of zero         an or list has the form     
            c  o  m  m  a  n  d             c  o  m  m  a  n  d             c  o  m  m  a  n  d    is executed if and only if   c  o  m  m  a  n  d    returns  a  non zero  exit        status    the  return  status of and and or lists is the exit status of        the last command executed in the list     c co om mp po ou un nd d c co om mm ma an nd ds s        a   c  o  m  p  o  u  n  d   c  o  m  m  a  n  d is one of the following            l  i  s  t    l  i  s  t is executed in a subshell environment  see  c co om mm ma an nd d  e ex xe ec cu u                  t ti io on n  e en nv vi ir ro on nm me en nt t below    variable assignments and builtin com                mands that affect the  shell s  environment  do  not  remain  in               effect  after  the  command completes   the return status is the               exit status of   l  i  s  t             l  i  s  t                    l  i  s  t is simply 
executed in the current shell environment      l  i  s  t               must  be  terminated with a newline or semicolon   this is known               as a   g  r  o  u  p   c  o  m  m  a  n  d   the return status is  the  exit  status  of                 l  i  s  t    note that unlike the metacharacters     and          and     are                 r  e  s  e  r  v  e  d   w  o  r  d  s and must occur where a reserved word is permitted               to  be  recognized    since they do not cause a word break  they               must be separated from   l  i  s  t by whitespace             e  x  p  r  e  s  s  i  o  n                 the   e  x  p  r  e  s  s  i  o  n is evaluated according  to  the  rules  described               below  under a ar ri it th hm me et ti ic c e ev va al lu ua at ti io on n   if the value of the expres                sion is non zero  the return status is    otherwise  the  return 
              status is     this is exactly equivalent to l le et t      e  x  p  r  e  s  s  i  o  n                     e  x  p  r  e  s  s  i  o  n                      return  a  status  of    or   depending on the evaluation of the               conditional expression   e  x  p  r  e  s  s  i  o  n   expressions are composed  of               the  primaries  described  below  under c co on nd di it ti io on na al l e ex xp pr re es ss si io on ns s                word splitting and pathname expansion are not performed  on  the               words  between  the          and          tilde expansion  parameter and               variable expansion  arithmetic expansion  command  substitution                process  substitution   and quote removal are performed   condi                tional operators such as    f f must be unquoted to be recognized as               primaries                when  the         and        operators are used  the string to the right               of the 
operator is considered a pattern and matched according to               the  rules described below under p pa at tt te er rn n m ma at tc ch hi in ng g   if the shell               option n no oc ca as se em ma at tc ch h is enabled  the match  is  performed  without               regard  to  the case of alphabetic characters   the return value               is   if the string matches          or does not match          the  pat                tern  and   otherwise   any part of the pattern may be quoted to               force it to be matched as a string                an additional binary operator          is available  with  the  same               precedence  as          and           when it is used  the string to the               right of the operator is considered an extended regular  expres                sion and matched accordingly  as in   r  e  g  e  x       the return value               is   if the 
string matches the pattern  and   otherwise   if the               regular  expression  is syntactically incorrect  the conditional               expression s return value is     if the shell option n no oc ca as se em ma at tc ch h               is enabled  the match is performed without regard to the case of               alphabetic  characters    substrings  matched  by  parenthesized               subexpressions  within  the  regular expression are saved in the               array variable b ba as sh h   r re em ma at tc ch h   the element of  b ba as sh h   r re em ma at tc ch h  with               index   is the portion of the string matching the entire regular               expression   the element of b ba as sh h   r re em ma at tc ch h with  index    n  is  the               portion  of the string matching the   nth parenthesized subexpres                sion                expressions may  be  combined  using 
 the  following  operators                listed in decreasing order of precedence                      e  x  p  r  e  s  s  i  o  n                          returns  the  value  of    e  x  p  r  e  s  s  i  o  n   this may be used to                      override the normal precedence of operators                      e  x  p  r  e  s  s  i  o  n                      true if   e  x  p  r  e  s  s  i  o  n is false                  e  x  p  r  e  s  s  i  o  n             e  x  p  r  e  s  s  i  o  n                         true if both   e  x  p  r  e  s  s  i  o  n    and   e  x  p  r  e  s  s  i  o  n    are true                  e  x  p  r  e  s  s  i  o  n             e  x  p  r  e  s  s  i  o  n                         true if either   e  x  p  r  e  s  s  i  o  n    or   e  x  p  r  e  s  s  i  o  n    is true                the        and        operators do not evaluate   e  x  p  r  e  s  s  i  o  n    if the value               of    e  x  p  r  e  s  s  i  o  n     is 
 sufficient to determine the return value of               the entire conditional expression         f fo or r   n  a  m  e   i in n   w  o  r  d     d do o   l  i  s  t   d do on ne e               the list of words following i in n is expanded  generating a list of               items   the variable   n  a  m  e is set to each element of this list in               turn  and   l  i  s  t is executed each time   if the i in n   w  o  r  d  is  omit                ted   the  f fo or r  command  executes    l  i  s  t once for each positional               parameter that is set  see p pa ar ra am me et te er rs s below    the return status               is  the  exit  status of the last command that executes   if the               expansion of the items following i in n results in an empty list  no               commands are executed  and the return status is           f fo or r      e  x  p  r        e  x 
 p  r        e  x  p  r         d do o   l  i  s  t   d do on ne e               first  the arithmetic expression   e  x  p  r    is evaluated according to               the rules described  below  under  a ar ri it th hm me et ti ic c  e ev va al lu ua at ti io on n    the               arithmetic  expression    e  x  p  r    is then evaluated repeatedly until               it evaluates to zero   each time   e  x  p  r    evaluates to  a  non zero               value     l  i  s  t  is executed and the arithmetic expression   e  x  p  r    is               evaluated   if any expression is omitted  it behaves  as  if  it               evaluates to     the return value is the exit status of the last               command in   l  i  s  t that is executed  or false if any of the expres                sions is invalid         s se el le ec ct t   n  a  m  e   i in n   w  o  r  d     d do o   l  i  s  t   d do 
on ne e               the list of words following i in n is expanded  generating a list of               items   the set of expanded words is  printed  on  the  standard               error   each  preceded  by a number   if the i in n   w  o  r  d is omitted                the positional parameters are printed   see  p pa ar ra am me et te er rs s  below                 the  p ps s    prompt is then displayed and a line read from the stan                dard input   if the line consists of a number  corresponding  to               one  of  the  displayed  words  then the value of   n  a  m  e is set to               that word   if the line is empty  the words and prompt are  dis                played again   if eof is read  the command completes   any other               value read causes   n  a  m  e to be set to  null    the  line  read  is               saved  in  the  variable r re ep pl ly y   the   l  
i  s  t is executed after each               selection until a b br re ea ak k command is executed   the exit status of               s se el le ec ct t  is the exit status of the last command executed in   l  i  s  t                or zero if no commands were executed         c ca as se e   w  o  r  d i in n         p  a  t  t  e  r  n         p  a  t  t  e  r  n           l  i  s  t          e es sa ac c               a c ca as se e command first expands   w  o  r  d  and tries to match it against               each   p  a  t  t  e  r  n in turn  using the same matching rules as for path                name expansion  see p pa at th hn na am me e  e ex xp pa an ns si io on n  below     the    w  o  r  d  is               expanded  using  tilde  expansion  parameter and variable expan                sion  arithmetic  substitution   command  substitution   process               substitution  and  quote  removal 
   each    p  a  t  t  e  r  n  examined  is               expanded using tilde expansion  parameter  and  variable  expan                sion  arithmetic substitution  command substitution  and process               substitution   if the shell option n no oc ca as se em ma at tc ch h is  enabled   the               match  is  performed  without  regard  to the case of alphabetic               characters   when a match is found  the  corresponding    l  i  s  t  is               executed    after  the  first  match   no subsequent matches are               attempted   the exit status is zero if no pattern matches   oth                erwise   it  is  the exit status of the last command executed in                 l  i  s  t         i if f   l  i  s  t  t th he en n   l  i  s  t      e el li if f   l  i  s  t  t th he en n   l  i  s  t          e el ls se e   l  i  s  t    f fi i               the i if f   l  i  s  t 
is executed   if its exit status is zero   the  t th he en n                 l  i  s  t  is  executed    otherwise   each  e el li if f   l  i  s  t is executed in               turn  and if its exit status is  zero   the  corresponding  t th he en n                 l  i  s  t is executed and the command completes   otherwise  the e el ls se e                 l  i  s  t is executed  if present   the exit status is the exit  sta                tus of the last command executed  or zero if no condition tested               true         w wh hi il le e   l  i  s  t  d do o   l  i  s  t  d do on ne e        u un nt ti il l   l  i  s  t  d do o   l  i  s  t  d do on ne e               the w wh hi il le e command continuously executes the d do o   l  i  s  t as  long  as               the  last  command  in   l  i  s  t returns an exit status of zero   the               u un nt ti il l command is identical to the w wh hi il le e command  except that the               test  is  negated   the 
 d do o   l  i  s  t is executed as long as the last               command in   l  i  s  t returns a non zero exit status   the exit status               of  the  w wh hi il le e and u un nt ti il l commands is the exit status of the last               d do o   l  i  s  t command executed  or zero if none was executed     s sh he el ll l f fu un nc ct ti io on n d de ef fi in ni it ti io on ns s        a shell function is an object that is called like a simple command  and        executes  a  compound  command with a new set of positional parameters         shell functions are declared as follows           f fu un nc ct ti io on n     n  a  m  e      c  o  m  p  o  u  n  d     c  o  m  m  a  n  d    r  e  d  i  r  e  c  t  i  o  n                this defines a function named   n  a  m  e   the reserved word  f fu un nc ct ti io on n               is  optional    if  the  f fu un nc ct ti io on n reserved word is supplied  the               parentheses are optional   the   b  o  d  y of 
the function is the  com                pound  command    c  o  m  p  o  u  n  d     c  o  m  m  a  n  d   see c co om mp po ou un nd d c co om mm ma an nd ds s above                 that command is usually a   l  i  s  t of commands between   and     but               may  be  any command listed under c co om mp po ou un nd d c co om mm ma an nd ds s above     c  o  m                    p  o  u  n  d     c  o  m  m  a  n  d is executed whenever   n  a  m  e is specified as the name               of  a  simple command   any redirections  see r re ed di ir re ec ct ti io on n below                specified when a function is  defined  are  performed  when  the               function  is executed   the exit status of a function definition               is zero unless a syntax error occurs or a readonly function with               the same name already exists   when executed  the exit status of               a function is the exit status of the last  command  executed  in          
     the body    see f fu un nc ct ti io on ns s below   c co om mm me en nt ts s        in a non interactive shell  or an interactive shell in which the i in nt te er r           a ac ct ti iv ve e   c co om mm me en nt ts s option to the  s sh ho op pt t  builtin  is  enabled   see  s sh he el ll l        b bu ui il lt ti in n  c co om mm ma an nd ds s  below   a word beginning with     causes that word and        all remaining characters on that line to be  ignored    an  interactive        shell  without  the  i in nt te er ra ac ct ti iv ve e   c co om mm me en nt ts s option enabled does not allow        comments   the i in nt te er ra ac ct ti iv ve e   c co om mm me en nt ts s option is on by default in interac         tive shells  q qu uo ot ti in ng g          q  u  o  t  i  n  g  is used to remove the special meaning of certain characters or        words to the shell   quoting can be used to disable  special  treatment        for special characters  to prevent reserved words 
from being recognized        as such  and to prevent parameter expansion         each of the   m  e  t  a  c  h  a  r  a  c  t  e  r  s listed above under d de ef fi in ni it ti io on ns s  has  special        meaning to the shell and must be quoted if it is to represent itself         when  the command history expansion facilities are being used  see h hi is s           t to or ry y e ex xp pa an ns si io on n below   the   h  i  s  t  o  r  y   e  x  p  a  n  s  i  o  n character  usually      must        be quoted to prevent history expansion         there  are  three  quoting  mechanisms   the    e  s  c  a  p  e    c  h  a  r  a  c  t  e  r  single        quotes  and double quotes         a non quoted backslash       is the   e  s  c  a  p  e   c  h  a  r  a  c  t  e  r   it  preserves  the        literal value of the next character that follows  with the exception of         newline    if a     newline 
 pair appears   and  the  backslash  is  not        itself  quoted   the     newline  is treated as a line continuation  that        is  it is removed from the input stream and effectively ignored          enclosing characters in single quotes preserves the  literal  value  of        each character within the quotes   a single quote may not occur between        single quotes  even when preceded by a backslash         enclosing characters in double quotes preserves the  literal  value  of        all  characters  within the quotes  with the exception of                and         when history expansion is enabled        the characters      and       retain        their  special meaning within double quotes   the backslash retains its        special meaning only when followed by one of the following  characters                               or    n ne ew wl li in ne e      a double quote may be quoted within double        quotes 
by preceding it with a backslash   if enabled  history expansion        will  be  performed  unless an      appearing in double quotes is escaped        using a backslash   the backslash preceding the      is not removed         the special parameters     and     have  special  meaning  when  in  double        quotes  see p pa ar ra am me et te er rs s below          words of the form       s  t  r  i  n  g  are treated specially   the word expands to          s  t  r  i  n  g  with backslash escaped characters replaced as specified by  the        ansi  c  standard   backslash escape sequences  if present  are decoded        as follows                   a a     alert  bell                   b b     backspace                  e e     an escape character                  f f     form feed                  n n     new line                  r r     carriage return                  t t     horizontal tab               
   v v     vertical tab                          backslash                          single quote                    n  n  n   the eight bit character whose value is  the  octal  value                        n  n  n  one to three digits                   x x  h  h   the  eight bit  character  whose value is the hexadecimal                      value   h  h  one or two hex digits                   c c  x    a control   x character        the expanded result is single quoted  as if the  dollar  sign  had  not        been present         a  double quoted  string  preceded  by a dollar sign       will cause the        string to be translated according to the current locale   if  the  cur         rent  locale  is c c or p po os si ix x  the dollar sign is ignored   if the string        is translated and replaced  the replacement is double quoted  p pa ar ra am me et te er rs s        a   p  a  r  a  m  e  t  e  r is an entity that stores values   it can be a   n  a  m  e  a  num         ber 
 or one of the special characters listed below under s sp pe ec ci ia al l p pa ar ra am m           e et te er rs s   a   v  a  r  i  a  b  l  e is a parameter denoted by a   n  a  m  e   a variable has  a          v  a  l  u  e  and  zero or more   a  t  t  r  i  b  u  t  e  s   attributes are assigned using the        d de ec cl la ar re e builtin command  see d de ec cl la ar re e below in s sh he el ll l b bu ui il lt ti in n  c co om mm ma an nd ds s          a parameter is set if it has been assigned a value   the null string is        a valid value   once a variable is set  it may be unset only  by  using        the u un ns se et t builtin command  see s sh he el ll l b bu ui il lt ti in n c co om mm ma an nd ds s below          a   v  a  r  i  a  b  l  e may be assigned to by a statement of the form                 n  a  m  e    v  a  l  u  e         if    v  a  l  u  e  is not given  the variable 
is assigned the null string   all          v  a  l  u  e  s undergo tilde expansion  parameter and variable expansion   com         mand  substitution  arithmetic expansion  and quote removal  see e ex xp pa an n           s si io on n below    if the variable has its i in nt te eg ge er r attribute set  then   v  a  l  u  e        is evaluated as an arithmetic expression even if the          expansion        is not used  see a ar ri it th hm me et ti ic c e ex xp pa an ns si io on n below    word  splitting  is  not        performed   with the exception of              as explained below under s sp pe ec ci ia al l        p pa ar ra am me et te er rs s   pathname expansion is not  performed    assignment  state         ments  may  also  appear  as  arguments to the a al li ia as s  d de ec cl la ar re e  t ty yp pe es se et t         e ex xp po or rt t  r re ea ad do on nl ly y  and l lo oc ca al l builtin commands     
    in the context where an assignment statement is assigning a value to  a        shell variable or array index  the    operator can be used to append to        or add to the variable s previous value   when    is applied to a vari         able  for  which the integer attribute has been set    v  a  l  u  e is evaluated        as an arithmetic expression and added to the variable s current  value         which is also evaluated   when    is applied to an array variable using        compound assignment  see a ar rr ra ay ys s below   the  variable s  value  is  not        unset  as it is when using     and new values are appended to the array        beginning at one greater than the array s maximum index   when  applied        to  a  string valued  variable     v  a  l  u  e  is expanded and appended to the        variable s value     p po os si it ti io on na al l p pa ar ra am me et te er rs s        a   p  o  s  i  t  i  o  n  a  l   p  a  r  a  m  e  t  e  r is a parameter denoted 
by one  or  more  digits         other than the single digit     positional parameters are assigned from        the shell s arguments when it is invoked  and may be  reassigned  using        the  s se et t builtin command   positional parameters may not be assigned to        with assignment statements   the positional parameters are  temporarily        replaced when a shell function is executed  see f fu un nc ct ti io on ns s below          when  a  positional parameter consisting of more than a single digit is        expanded  it must be enclosed in braces  see e ex xp pa an ns si io on n below      s sp pe ec ci ia al l p pa ar ra am me et te er rs s        the shell treats several parameters specially    these  parameters  may        only be referenced  assignment to them is not allowed                  expands  to  the positional parameters  starting from one   when               the expansion occurs within double quotes 
 it expands to a  sin                gle word with the value of each parameter separated by the first               character of the i if fs s special variable   that is           is equiva                lent to          c        c            where   c is the first character of the value               of the i if fs s variable   if i if fs s is unset  the parameters are  sepa                rated  by  spaces    if  i if fs s  is null  the parameters are joined               without intervening separators                  expands to the positional parameters  starting from  one    when               the  expansion  occurs  within  double  quotes   each  parameter               expands to a separate word   that is           is equivalent to                                        if the double quoted expansion occurs within a word                the expansion of the first parameter is joined with  the  begin    
            ning  part  of  the original word  and the expansion of the last               parameter is joined with the last part  of  the  original  word                when  there  are no positional parameters           and        expand to               nothing  i e   they are removed                   expands to the number of positional parameters in decimal                  expands to the status of the most recently  executed  foreground               pipeline                  expands  to  the  current option flags as specified upon invoca                tion  by the s se et t builtin command  or  those  set  by  the  shell               itself  such as the    i i option                   expands  to  the  process id of the shell   in a    subshell  it               expands to the process id of the current  shell   not  the  sub                shell                  expands  to  the  process id of the most recently executed back                ground  asynchronous  command   
               expands to the name of the shell or shell script   this  is  set               at shell initialization   if b ba as sh h is invoked with a file of com                mands         is set to the name of that file   if b ba as sh h  is  started               with  the     c c option  then        is set to the first argument after               the string to be executed  if one is present   otherwise  it  is               set  to  the file name used to invoke b ba as sh h  as given by argument               zero                  at shell startup  set to the absolute pathname  used  to  invoke               the  shell or shell script being executed as passed in the envi                ronment or argument list   subsequently   expands  to  the  last               argument  to the previous command  after expansion   also set to               the full pathname used  to  invoke  each  command  executed  
and               placed in the environment exported to that command   when check                ing mail  this parameter holds the name of the  mail  file  cur                rently being checked     s sh he el ll l v va ar ri ia ab bl le es s        the following variables are set by the shell         b ba as sh h   expands  to  the  full file name used to invoke this instance of               b ba as sh h         b ba as sh h   a ar rg gc c               an array variable whose values are the number of  parameters  in               each frame of the current bash execution call stack   the number               of parameters to  the  current  subroutine   shell  function  or               script  executed  with      or s so ou ur rc ce e  is at the top of the stack                when a subroutine is executed  the number of  parameters  passed               is pushed onto b ba as sh h   a ar rg gc c   
the shell sets b ba as sh h   a ar rg gc c only when in               extended debugging mode  see the  description  of  the  e ex xt td de eb bu ug g               option to the s sh ho op pt t builtin below         b ba as sh h   a ar rg gv v               an  array  variable containing all of the parameters in the cur                rent bash execution call stack   the final parameter of the last               subroutine  call is at the top of the stack  the first parameter               of the initial call is at the bottom   when a subroutine is exe                cuted   the  parameters supplied are pushed onto b ba as sh h   a ar rg gv v   the               shell sets b ba as sh h   a ar rg gv v only when in extended debugging  mode   see               the  description  of  the  e ex xt td de eb bu ug g  option to the s sh ho op pt t builtin               below         b ba as sh h   c co om mm ma an nd d     
          the command currently being executed or about  to  be  executed                unless the shell is executing a command as the result of a trap                in which case it is the command executing at  the  time  of  the               trap         b ba as sh h   e ex xe ec cu ut ti io on n   s st tr ri in ng g               the command argument to the    c c invocation option         b ba as sh h   l li in ne en no o               an  array  variable whose members are the line numbers in source               files   corresponding    to    each    member    of    f fu un nc cn na am me e                      b ba as sh h   l li in ne en no o        i        is  the line number in the source file where                     f fu un nc cn na am me e        i  f  p         w  a  s   c  a  l  l  e  d        t  h  e    c  o  r  r  e  s  p  o  n  d  i  n  g    s  o  u  r  c  e    f  i  l  e                 n  a  m  e    i  s        b ba as sh h   s so ou ur rc ce e        
i            u us se e l li in ne en no o t to o o ob bt ta ai in n t th he e c cu ur rr re en nt t               l li in ne e n nu um mb be er r           b ba as sh h   r re em ma at tc ch h               an array variable whose members are assigned by  the          binary               operator  to the        conditional command   the element with index                 is the portion of  the  string  matching  the  entire  regular               expression    the  element  with  index    n is the portion of the               string matching the   nth parenthesized subexpression   this vari                able is read only         b ba as sh h   s so ou ur rc ce e               an  array variable whose members are the source filenames corre                sponding to the elements in the f fu un nc cn na am me e array variable         b ba as sh h   s su ub bs sh he el ll l               incremented by one each 
time a subshell or subshell  environment               is spawned   the initial value is           b ba as sh h   v ve er rs si in nf fo o               a readonly array variable whose members hold version information               for this instance of b ba as sh h   the values  assigned  to  the  array               members are as follows                b ba as sh h   v ve er rs si in nf fo o               the  major version number  the   r  e  l  e  a  s  e                 b ba as sh h   v ve er rs si in nf fo o               the minor version number  the    v  e  r  s  i  o  n                 b ba as sh h   v ve er rs si in nf fo o               the patch level                b ba as sh h   v ve er rs si in nf fo o               the build version                b ba as sh h   v ve er rs si in nf fo o               the release status  e g     b  e  t  a                    b ba as sh h   v ve er rs si in nf fo o     
          the value of m ma ac ch ht ty yp pe e         b ba as sh h   v ve er rs si io on n               expands  to  a string describing the version of this instance of               b ba as sh h         c co om mp p   c cw wo or rd d               an index into       c co om mp p   w wo or rd ds s    of the word containing  the  current               cursor position   this variable is available only in shell func                tions invoked by the  programmable  completion  facilities   see               p pr ro og gr ra am mm ma ab bl le e c co om mp pl le et ti io on n below          c co om mp p   l li in ne e               the  current  command  line   this variable is available only in               shell functions  and  external  commands  invoked  by  the  pro                grammable  completion  facilities   see  p pr ro og gr ra am mm ma ab bl le e c co om mp pl le et ti io on n               below          c co om mp p   p po oi in nt t               the index of the 
current cursor position relative to the  begin                ning  of the current command   if the current cursor position is               at the end of the current command  the value of this variable is               equal  to           c co om mp p   l li in ne e       this  variable  is available only in               shell functions  and  external  commands  invoked  by  the  pro                grammable  completion  facilities   see  p pr ro og gr ra am mm ma ab bl le e c co om mp pl le et ti io on n               below          c co om mp p   w wo or rd db br re ea ak ks s               the set of characters that the readline library treats  as  word               separators  when performing word completion   if c co om mp p   w wo or rd db br re ea ak ks s               is unset  it loses its special properties  even if it is  subse                quently reset         c co om mp p   w wo or rd ds 
s               an  array variable  see a ar rr ra ay ys s below  consisting of the individ                ual words in the current command line   the words are  split  on               shell  metacharacters  as  the shell parser would separate them                this variable is available only in shell  functions  invoked  by               the programmable completion facilities  see p pr ro og gr ra am mm ma ab bl le e c co om mp pl le e                  t ti io on n below          d di ir rs st ta ac ck k               an array variable  see a ar rr ra ay ys s below  containing the current con                tents  of  the directory stack   directories appear in the stack               in the order they are displayed by the d di ir rs s builtin    assigning               to members of this array variable may be used to modify directo                ries already in the stack  but the p pu us sh hd d and p po 
op pd d builtins  must               be used to add and remove directories   assignment to this vari                able will not change the  current  directory    if  d di ir rs st ta ac ck k  is               unset   it  loses  its  special properties  even if it is subse                quently reset         e eu ui id d   expands to the effective user id of the current  user   initial                ized at shell startup   this variable is readonly         f fu un nc cn na am me e               an  array  variable  containing the names of all shell functions               currently in the execution call stack   the element with index                 is the name of any currently executing shell function   the bot                tom most element is  main    this variable exists  only  when  a               shell  function  is  executing   assignments to f fu un nc cn na am me e have no               effect and return 
an error status   if  f fu un nc cn na am me e  is  unset   it               loses  its special properties  even if it is subsequently reset         g gr ro ou up ps s an array variable containing the list of  groups  of  which  the               current  user is a member   assignments to g gr ro ou up ps s have no effect               and return an error status   if g gr ro ou up ps s is unset   it  loses  its               special properties  even if it is subsequently reset         h hi is st tc cm md d               the history number  or index in the history list  of the current               command   if h hi is st tc cm md d is unset  it loses its special  properties                even if it is subsequently reset         h ho os st tn na am me e               automatically set to the name of the current host         h ho os st tt ty yp pe e               automatically  set  to a string that uniquely 
describes the type               of machine on which b ba as sh h is executing   the default  is  system                dependent         l li in ne en no o each  time this parameter is referenced  the shell substitutes a               decimal number representing the current sequential  line  number                starting  with      within a script or function   when not in a               script or function  the value substituted is not  guaranteed  to               be meaningful   if l li in ne en no o is unset  it loses its special proper                ties  even if it is subsequently reset         m ma ac ch ht ty yp pe e               automatically set to a string that fully  describes  the  system               type  on  which  b ba as sh h is executing  in the standard gnu   c  p  u     c  o  m                    p  a  n  y     s  y  s  t  e  m format   the default is system dependent         o ol ld dp pw wd d the previous working directory as set by the c cd d command    
     o op pt ta ar rg g the value of the last option argument processed by  the  g ge et to op pt ts s               builtin command  see s sh he el ll l b bu ui il lt ti in n c co om mm ma an nd ds s below          o op pt ti in nd d the  index  of  the next argument to be processed by the g ge et to op pt ts s               builtin command  see s sh he el ll l b bu ui il lt ti in n c co om mm ma an nd ds s below          o os st ty yp pe e automatically set to a string that describes the operating  sys                tem  on  which  b ba as sh h is executing   the default is system depen                dent         p pi ip pe es st ta at tu us s               an array variable  see a ar rr ra ay ys s below  containing a list  of  exit               status  values  from the processes in the most recently executed               foreground pipeline  which may contain only a single command          p pp pi id 
d   the process id of the shell s parent   this  variable  is  read                only         p pw wd d    the current working directory as set by the c cd d command         r ra an nd do om m each time this parameter is referenced  a random integer between                 and       is generated   the sequence of random numbers may be               initialized by assigning a value to r ra an nd do om m   if r ra an nd do om m is unset                it loses its special properties   even  if  it  is  subsequently               reset         r re ep pl ly y  set  to  the line of input read by the r re ea ad d builtin command when               no arguments are supplied         s se ec co on nd ds s               each time this parameter is referenced  the  number  of  seconds               since  shell  invocation is returned   if a value is assigned to               s se ec co on nd ds s  the value returned upon subsequent  references  is  the               number  of seconds since 
the assignment plus the value assigned                if s se ec co on nd ds s is unset  it loses its special properties  even if it               is subsequently reset         s sh he el ll lo op pt ts s               a  colon separated  list of enabled shell options   each word in               the list is a valid argument  for  the     o o  option  to  the  s se et t               builtin command  see s sh he el ll l b bu ui il lt ti in n c co om mm ma an nd ds s below    the options               appearing in s sh he el ll lo op pt ts s are those reported as   o  n by s se et t     o o    if               this  variable  is  in the environment when b ba as sh h starts up  each               shell option in the list will  be  enabled  before  reading  any               startup files   this variable is read only         s sh hl lv vl l  incremented by one each time an instance of b ba as sh h is started 
        u ui id d    expands to the user id of the current user  initialized at shell               startup   this variable is readonly         the following variables are used by the shell    in  some  cases   b ba as sh h        assigns a default value to a variable  these cases are noted below         b ba as sh h   e en nv v               if  this parameter is set when b ba as sh h is executing a shell script                its value is interpreted as a filename  containing  commands  to               initialize the shell  as in            b  a  s  h  r  c   the value of b ba as sh h   e en nv v is               subjected to  parameter  expansion   command  substitution   and               arithmetic  expansion  before  being interpreted as a file name                p pa at th h is not used to search for the resultant file name         c cd dp pa at th h the search path for the c cd d command   this 
is  a  colon separated               list  of  directories  in  which the shell looks for destination               directories specified by the c cd d  command    a  sample  value  is                     usr          c co ol lu um mn ns s               used  by  the  s se el le ec ct t  builtin command to determine the terminal               width when printing selection  lists    automatically  set  upon               receipt of a sigwinch         c co om mp pr re ep pl ly y               an array variable from which b ba as sh h reads the possible completions               generated by a shell function invoked by the  programmable  com                pletion facility  see p pr ro og gr ra am mm ma ab bl le e c co om mp pl le et ti io on n below          e em ma ac cs s  if  b ba as sh h  finds  this variable in the environment when the shell               starts with value  t   it assumes that the shell is  running 
 in               an emacs shell buffer and disables line editing         f fc ce ed di it t the default editor for the f fc c builtin command         f fi ig gn no or re e               a  colon separated  list  of  suffixes to ignore when performing               filename completion  see r re ea ad dl li in ne e below    a filename whose suf                fix  matches  one of the entries in f fi ig gn no or re e is excluded from the               list of matched filenames   a sample value is   o            g gl lo ob bi ig gn no or re e               a colon separated list of patterns defining the set of filenames               to be ignored by pathname expansion   if a filename matched by a               pathname expansion pattern also matches one of the  patterns  in               g gl lo ob bi ig gn no or re e  it is removed from the list of matches         h hi is st tc co on nt tr ro ol l               a  colon separated  list  of values controlling how commands are        
       saved on the history list    if  the  list  of  values  includes                 i  g  n  o  r  e  s  p  a  c  e   lines  which  begin with a s sp pa ac ce e character are not               saved in the history list   a value of   i  g  n  o  r  e  d  u  p  s  causes  lines               matching the previous history entry to not be saved   a value of                 i  g  n  o  r  e  b  o  t  h is shorthand for   i  g  n  o  r  e  s  p  a  c  e and   i  g  n  o  r  e  d  u  p  s   a value               of   e  r  a  s  e  d  u  p  s causes all previous lines matching the current line               to be removed from the history list before that line  is  saved                any  value  not in the above list is ignored   if h hi is st tc co on nt tr ro ol l is               unset  or does not include a valid value  all lines read by  the               shell parser are saved on the history list  subject 
to the value               of h hi is st ti ig gn no or re e   the second and subsequent lines of a  multi line               compound  command  are  not tested  and are added to the history               regardless of the value of h hi is st tc co on nt tr ro ol l         h hi is st tf fi il le e               the name of the file in which command history is saved  see h hi is s                  t to or ry y  below     the default value is            b  a  s  h     h  i  s  t  o  r  y   if unset                the command history is  not  saved  when  an  interactive  shell               exits         h hi is st tf fi il le es si iz ze e               the maximum number of lines contained in the history file   when               this variable is assigned a value  the  history  file  is  trun                cated   if necessary  by removing the oldest entries  to contain               no more than that number of lines   the 
default  value  is                     the history file is also truncated to this size after writing it               when an interactive shell exits         h hi is st ti ig gn no or re e               a colon separated list of patterns used to decide which  command               lines  should  be  saved  on  the history list   each pattern is               anchored at the beginning of the line and must  match  the  com                plete  line   no  implicit         is  appended    each pattern is               tested against the line after the checks specified  by  h hi is st tc co on n                  t tr ro ol l  are  applied    in  addition  to  the normal shell pattern               matching characters        matches the previous history line                       may  be  escaped  using  a  backslash   the backslash is removed               before attempting a match   the second and subsequent lines 
of a               multi line compound command are not tested  and are added to the               history regardless of the value of h hi is st ti ig gn no or re e         h hi is st ts si iz ze e               the number of commands to remember in the command  history   see               h hi is st to or ry y below    the default value is             h hi is st tt ti im me ef fo or rm ma at t               if  this  variable  is  set and not null  its value is used as a               format string for   s  t  r  f  t  i  m  e    to print the time stamp associated               with  each  history  entry displayed by the h hi is st to or ry y builtin   if               this variable is set  time stamps are  written  to  the  history               file so they may be preserved across shell sessions         h ho om me e   the home directory of the current user  the default argument for               the c cd d builtin command   the value of this variable is also used          
     when performing tilde expansion         h ho os st tf fi il le e               contains  the  name  of  a file in the same format as      e  t  c     h  o  s  t  s               that should be read when the shell needs to complete a hostname                the  list  of possible hostname completions may be changed while               the shell is running   the  next  time  hostname  completion  is               attempted  after the value is changed  b ba as sh h adds the contents of               the new file to the existing list   if h ho os st tf fi il le e is set  but  has               no value  b ba as sh h attempts to read      e  t  c     h  o  s  t  s to obtain the list of               possible hostname completions    when  h ho os st tf fi il le e  is  unset   the               hostname list is cleared         i if fs s    the    i  n  t  e  r  n  a  l    f  i  e  l  d    s  e  p  a  r  a  t  o  r  that is used for word splitting               after expansion and 
to split lines  into  words  with  the  r re ea ad d               builtin  command    the  default  value  is     space  tab  new                line            i ig gn no or re ee eo of f               controls the action of an interactive shell on receipt of an e eo of f               character as the sole input   if set  the value is the number of               consecutive e eo of f characters which must  be  typed  as  the  first               characters  on an input line before b ba as sh h exits   if the variable               exists but does not have a numeric value  or has no  value   the               default  value  is       if it does not exist  e eo of f signifies the               end of input to the shell         i in np pu ut tr rc c               the filename for  the  r re ea ad dl li in ne e  startup  file   overriding  the               default of            i  n  p  u  t  r  c  see r re ea ad dl li 
in ne e below          l la an ng g   used  to  determine  the  locale  category  for any category not               specifically selected with a variable starting with l lc c            l lc c   a al ll l this variable overrides the value of  l la an ng g  and  any  other  l lc c                  variable specifying a locale category         l lc c   c co ol ll la at te e               this  variable  determines the collation order used when sorting               the results of pathname expansion  and determines  the  behavior               of   range   expressions   equivalence  classes   and  collating               sequences within pathname expansion and pattern matching         l lc c   c ct ty yp pe e               this variable determines the interpretation  of  characters  and               the  behavior of character classes within pathname expansion and               pattern matching         l lc c   m me 
es ss sa ag ge es s               this variable determines the locale used  to  translate  double                quoted strings preceded by a             l lc c   n nu um me er ri ic c               this  variable  determines  the  locale category used for number               formatting         l li in ne es s  used by the s se el le ec ct t  builtin  command  to  determine  the  column               length  for  printing  selection  lists   automatically set upon               receipt of a sigwinch         m ma ai il l   if this parameter is set to a file name and the  m ma ai il lp pa at th h  vari                able is not set  b ba as sh h informs the user of the arrival of mail in               the specified file         m ma ai il lc ch he ec ck k               specifies how often  in seconds   b ba as sh h  checks  for  mail    the               default  is     seconds   when it is time to check for 
mail  the               shell does so before displaying the  primary  prompt    if  this               variable  is  unset   or  set  to  a  value that is not a number               greater than or equal to zero  the shell disables mail checking         m ma ai il lp pa at th h               a  colon separated  list  of  file names to be checked for mail                the message to be printed when mail arrives in a particular file               may  be  specified  by separating the file name from the message               with a       when used in the text of the message         expands to               the name of the current mailfile   example                m ma ai il lp pa at th h   var mail bfox  you  have  mail    shell mail      has               mail                  b ba as sh h supplies a default value for this variable  but  the  loca                tion  of  the  user  mail files that it uses is system dependent                e g    var mail    u us se er r        
  o op pt te er rr r if set to the value    b ba as sh h displays error messages generated by               the  g ge et to op pt ts s builtin command  see s sh he el ll l b bu ui il lt ti in n c co om mm ma an nd ds s below                 o op pt te er rr r is initialized to   each time the shell is invoked  or  a               shell script is executed         p pa at th h   the  search  path for commands   it is a colon separated list of               directories in which the shell looks for commands   see  c co om mm ma an nd d               e ex xe ec cu ut ti io on n  below     a  zero length  null  directory name in the               value of p pa at th h indicates the current directory   a null directory               name  may  appear  as  two  adjacent colons  or as an initial or               trailing colon   the default path is  system dependent   and  is               set  by  the administrator who installs 
b ba as sh h   a common value is                  usr gnu bin  usr local bin  usr ucb  bin  usr bin           p po os si ix xl ly y   c co or rr re ec ct t               if this variable is in the environment  when  b ba as sh h  starts   the               shell  enters   p  o  s  i  x   m  o  d  e before reading the startup files  as if               the       p po os si ix x invocation option had been supplied   if it  is  set               while  the  shell is running  b ba as sh h enables   p  o  s  i  x   m  o  d  e  as if the               command   s  e  t      o   p  o  s  i  x had been executed         p pr ro om mp pt t   c co om mm ma an nd d               if set  the value is executed as a command prior to issuing each               primary prompt         p ps s       the  value  of  this parameter is expanded  see p pr ro om mp pt ti in ng g below                and used as the primary prompt string    the  default  value  is                    s s      v v                 
 p ps s       the  value of this parameter is expanded as with p ps s    and used as               the secondary prompt string   the default is                  p ps s       the value of this parameter is used as the prompt for the s se el le ec ct t               command  see s sh he el ll l g gr ra am mm ma ar r above          p ps s       the  value  of  this  parameter  is expanded as with p ps s    and the               value is printed before each command  b ba as sh h  displays  during  an               execution  trace   the first character of p ps s    is replicated mul                tiple times  as necessary  to indicate multiple levels of  indi                rection   the default is                  s sh he el ll l  the full pathname to the shell is kept in this environment vari                able   if it is not set when the shell starts  b ba as sh h  assigns  to               it the full pathname of the current user s login shell         t ti im me ef fo or rm ma at t 
              the  value of this parameter is used as a format string specify                ing how the timing information for pipelines prefixed  with  the               t ti im me e  reserved word should be displayed   the     character intro                duces an escape sequence that is expanded to  a  time  value  or               other  information   the escape sequences and their meanings are               as follows  the braces denote optional portions                              a literal                            p      l l   r r  the elapsed time in seconds                        p      l l   u u  the number of cpu seconds spent in user mode                        p      l l   s s  the number of cpu seconds spent in system mode                   p p        the cpu percentage  computed as   u    s     r                 the optional   p is a digit specifying the   p  r  e  c  i  s  i  o  n   the  number               of fractional digits after a decimal point   a value 
of   causes               no decimal point or fraction to be output   at most three places               after  the  decimal  point may be specified  values of   p greater               than   are changed to     if   p is not specified  the value    is               used                the  optional l l specifies a longer format  including minutes  of               the form   m  mm  s  s   f  fs   the value of   p determines  whether  or  not               the fraction is included                if  this  variable  is not set  b ba as sh h acts as if it had the value                        n nr re ea al l   t t      l lr r   n nu us se er r   t t      l lu u   n ns sy ys s      l ls s      if the value is null   no               timing  information  is  displayed   a trailing newline is added               when the format string is displayed         t tm mo ou ut t  if set to a value greater than zero  t tm mo 
ou ut t  is  treated  as  the               default timeout for the r re ea ad d builtin   the s se el le ec ct t command termi                nates if input does not arrive after t tm mo ou ut t seconds when input is               coming  from  a terminal   in an interactive shell  the value is               interpreted as the number of seconds to  wait  for  input  after               issuing  the  primary prompt   b ba as sh h terminates after waiting for               that number of seconds if input does not arrive         t tm mp pd di ir r if set  b ba as sh h uses its value as the name of a directory in  which               b ba as sh h creates temporary files for the shell s use         a au ut to o   r re es su um me e               this variable controls how the shell interacts with the user and               job control   if this variable is set  single word  simple  com                mands without redirections 
are treated as candidates for resump                tion of an existing stopped job   there is no ambiguity allowed                if  there  is more than one job beginning with the string typed                the job most recently accessed  is  selected    the    n  a  m  e  of  a               stopped  job  in this context  is the command line used to start               it   if set to the value   e  x  a  c  t  the string supplied  must  match               the  name  of  a  stopped  job exactly  if set to   s  u  b  s  t  r  i  n  g  the               string supplied needs to match a substring  of  the  name  of  a               stopped  job   the   s  u  b  s  t  r  i  n  g value provides functionality analo                gous to the         job identifier  see j jo ob b c co on nt tr ro ol l below    if  set               to  any  other  value  the supplied string must be a prefix of a               stopped 
job s name  this provides functionality analogous to the                    s  t  r  i  n  g job identifier         h hi is st tc ch ha ar rs s               the  two or three characters which control history expansion and               tokenization  see h hi is st to or ry y e ex xp pa an ns si io on n below    the first character               is  the   h  i  s  t  o  r  y   e  x  p  a  n  s  i  o  n character  the character which signals               the start of a history  expansion   normally           the  second               character  is the   q  u  i  c  k   s  u  b  s  t  i  t  u  t  i  o  n character  which is used as               shorthand for re running the previous command  entered   substi                tuting  one  string  for another in the command   the default is                       the optional third character is the character which  indi                cates  that the remainder of 
the line is a comment when found as               the first character of a word  normally         the  history  com                ment character causes history substitution to be skipped for the               remaining words on the line   it does not necessarily cause  the               shell parser to treat the rest of the line as a comment      a ar rr ra ay ys s        b ba as sh h  provides  one dimensional  array  variables   any variable may be        used as an array  the d de ec cl la ar re e builtin will explicitly declare an array         there  is no maximum limit on the size of an array  nor any requirement        that members be indexed or assigned contiguously   arrays  are  indexed        using integers and are zero based         an  array is created automatically if any variable is assigned to using        the syntax   n  a  m  e   s  u  b  s  c  r  i  p  t    v  a  l  u  e    the    s  u  b  s  c  r  i  p  t  
is  treated  as  an        arithmetic  expression  that  must evaluate to a number greater than or        equal to zero   to explicitly declare an array   use  d de ec cl la ar re e     a a    n  a  m  e         see s sh he el ll l b bu ui il lt ti in n c co om mm ma an nd ds s below    d de ec cl la ar re e    a a   n  a  m  e     s  u  b  s  c  r  i  p  t    is also        accepted  the   s  u  b  s  c  r  i  p  t is ignored   attributes may be specified for an        array variable using the d de ec cl la ar re e and r re ea ad do on nl ly y builtins   each attribute        applies to all members of an array         arrays  are  assigned  to  using  compound  assignments  of  the   form          n  a  m  e    value          value  n      where  each    v  a  l  u  e  is  of  the form    s  u  b             s  c  r  i  p  t    s  t  r  i  n  g   only   s  t  r  i  n  g is required   if the optional brackets and        subscript  are supplied  that index is assigned to  otherwise 
the index        of the element assigned is the last index assigned to by the  statement        plus  one    indexing  starts at zero   this syntax is also accepted by        the d de ec cl la ar re e builtin   individual array  elements  may  be  assigned  to        using the   n  a  m  e   s  u  b  s  c  r  i  p  t    v  a  l  u  e syntax introduced above         any  element  of  an  array may be referenced using     n  a  m  e   s  u  b  s  c  r  i  p  t           the braces are required to avoid conflicts with pathname expansion   if          s  u  b  s  c  r  i  p  t  is       or      the word expands to all members of   n  a  m  e   these        subscripts differ only when the word appears within double quotes    if        the word is double quoted      n  a  m  e     expands to a single word with the        value of each array member separated by the first character of the  i if fs s        special variable  and   
  n  a  m  e     expands each element of   n  a  m  e to a sep         arate word   when there are no array  members       n  a  m  e      expands  to        nothing    if  the  double quoted  expansion  occurs within a word  the        expansion of the first parameter is joined with the beginning  part  of        the  original  word   and the expansion of the last parameter is joined        with the last part of the original word    this  is  analogous  to  the        expansion  of  the  special  parameters     and      see s sp pe ec ci ia al l p pa ar ra am me et te er rs s        above         n  a  m  e   s  u  b  s  c  r  i  p  t    expands  to  the  length  of      n  a  m  e   s  u  b             s  c  r  i  p  t      if   s  u  b  s  c  r  i  p  t is     or      the expansion is the number of ele         ments in the array   referencing an array variable without a  subscript        is equivalent to 
referencing element zero         the  u un ns se et t  builtin  is  used to destroy arrays   u un ns se et t   n  a  m  e   s  u  b  s  c  r  i  p  t         destroys the array element at index   s  u  b  s  c  r  i  p  t   care must be  taken  to        avoid unwanted side effects caused by filename generation   u un ns se et t   n  a  m  e         where   n  a  m  e is an array  or u un ns se et t   n  a  m  e   s  u  b  s  c  r  i  p  t   where   s  u  b  s  c  r  i  p  t is             or      removes the entire array         the  d de ec cl la ar re e   l lo oc ca al l   and r re ea ad do on nl ly y builtins each accept a    a a option to        specify an array   the r re ea ad d builtin accepts a    a a  option  to  assign  a        list  of  words  read from the standard input to an array   the s se et t and        d de ec cl la ar re e builtins display array values in a way that allows them  to  be        reused as assignments  e ex xp pa an ns si io on n        expansion 
is performed on the command line after it has been split into        words   there are seven kinds of expansion performed    b  r  a  c  e    e  x  p  a  n  s  i  o  n           t  i  l  d  e    e  x  p  a  n  s  i  o  n     p  a  r  a  m  e  t  e  r    a  n  d   v  a  r  i  a  b  l  e   e  x  p  a  n  s  i  o  n    c  o  m  m  a  n  d   s  u  b  s  t  i  t  u             t  i  o  n    a  r  i  t  h  m  e  t  i  c   e  x  p  a  n  s  i  o  n    w  o  r  d   s  p  l  i  t  t  i  n  g  and   p  a  t  h  n  a  m  e   e  x  p  a  n  s  i  o  n         the order of expansions is  brace expansion  tilde  expansion   parame         ter   variable  and arithmetic expansion and command substitution  done        in a left to right fashion   word splitting  and pathname expansion         on systems that can support it  there is an additional expansion avail         able    p  r  o  c  e  s  s   s  u  b  s  t  i  t  u  t  i  o  n         only brace expansion  word splitting  and pathname expansion 
can change        the number of words of the expansion  other expansions expand a  single        word  to a single word   the only exceptions to this are the expansions        of          and          n  a  m  e              as explained above  see p pa ar ra am me et te er rs s      b br ra ac ce e e ex xp pa an ns si io on n          b  r  a  c  e   e  x  p  a  n  s  i  o  n is a mechanism by which arbitrary strings may be gener         ated    this  mechanism is similar to   p  a  t  h  n  a  m  e   e  x  p  a  n  s  i  o  n  but the file         names generated need not exist   patterns to be brace expanded take the        form of an optional   p  r  e  a  m  b  l  e  followed by either a series of comma sep         arated strings or a sequence expression between a pair of braces   fol         lowed  by  an  optional    p  o  s  t  s  c  r  i  p  t    the preamble is prefixed to each        string contained 
within the braces  and the postscript is then appended        to each resulting string  expanding left to right         brace  expansions  may  be nested   the results of each expanded string        are not sorted   left  to  right  order  is  preserved    for  example         a   d c b   e expands into  ade ace abe          a  sequence  expression takes the form      x        y     where   x and   y are either        integers or single characters   when integers are supplied  the expres         sion  expands  to each number between   x and   y  inclusive   when charac         ters are supplied  the expression expands  to  each  character  lexico         graphically between   x and   y  inclusive   note that both   x and   y must be        of the same type         brace expansion is performed before any other expansions  and any char         acters  special to other expansions are preserved in the result   it 
is        strictly textual   b ba as sh h does not apply any syntactic interpretation  to        the context of the expansion or the text between the braces         a  correctly formed  brace  expansion must contain unquoted opening and        closing braces  and at least one unquoted comma  or  a  valid  sequence        expression    any incorrectly formed brace expansion is left unchanged         a     or     may be quoted with a backslash to prevent its being considered        part  of  a brace expression   to avoid conflicts with parameter expan         sion  the string        is not considered eligible for brace expansion         this construct is typically used as shorthand when the common prefix of        the strings to be generated is longer than in the above example                mkdir  usr local src bash  old new dist bugs         or               chown root  usr  ucb  ex edit  lib  ex     how 
ex          brace  expansion  introduces  a  slight incompatibility with historical        versions of s sh h   s sh h does not treat opening or closing braces  specially        when  they  appear as part of a word  and preserves them in the output         b ba as sh h removes braces from words as a  consequence  of  brace  expansion         for  example   a word entered to s sh h as   f  i  l  e                appears identically in        the output   the same word is output as   f  i  l  e      f  i  l  e    after expansion  by        b ba as sh h    if strict compatibility with s sh h is desired  start b ba as sh h with the           b b option or disable brace expansion with the    b b option to the s se et t com         mand  see s sh he el ll l b bu ui il lt ti in n c co om mm ma an nd ds s below      t ti il ld de e e ex xp pa an ns si io on n        if  a  word  begins  with an unquoted tilde character 
         all of the        characters preceding the first unquoted slash  or  all  characters   if        there  is no unquoted slash  are considered a   t  i  l  d  e     p  r  e  f  i  x   if none of        the characters in the tilde prefix are quoted  the  characters  in  the        tilde prefix  following the tilde are treated as a possible   l  o  g  i  n   n  a  m  e         if this login name is the null string  the tilde is replaced  with  the        value  of  the shell parameter h ho om me e   if h ho om me e is unset  the home direc         tory of the user executing the shell is  substituted  instead    other         wise   the  tilde prefix is replaced with the home directory associated        with the specified login name         if the tilde prefix is a       the value  of  the  shell  variable  p pw wd d        replaces the tilde prefix   if the tilde prefix is a       the value of        the 
shell variable o ol ld dp pw wd d  if it is set  is substituted   if the  char         acters  following  the tilde in the tilde prefix consist of a number   n         optionally prefixed by a     or a       the  tilde prefix  is  replaced        with the corresponding element from the directory stack  as it would be        displayed by the d di ir rs s builtin invoked with the tilde prefix as an argu         ment    if  the characters following the tilde in the tilde prefix con         sist of a number without a leading     or          is assumed         if the login name is invalid  or the tilde expansion fails  the word is        unchanged         each variable assignment is checked for unquoted tilde prefixes immedi         ately following a     or the first       in these cases  tilde expansion is        also  performed    consequently   one may use file names with tildes in        assignments to p pa 
at th h  m ma ai il lp pa at th h  and c cd dp pa at th h  and the  shell  assigns  the        expanded value     p pa ar ra am me et te er r e ex xp pa an ns si io on n        the       character introduces parameter expansion  command substitution         or arithmetic expansion   the parameter name or symbol to  be  expanded        may  be enclosed in braces  which are optional but serve to protect the        variable to be expanded from characters immediately following it  which        could be interpreted as part of the name         when  braces  are  used  the matching ending brace is the first       not        escaped by a backslash or within a quoted string   and  not  within  an        embedded  arithmetic  expansion   command  substitution   or  parameter        expansion             p  a  r  a  m  e  t  e  r                the value of   p  a  r  a  m  e  t  e  r is substituted   the braces are  required 
              when    p  a  r  a  m  e  t  e  r  is  a  positional  parameter with more than one               digit  or when   p  a  r  a  m  e  t  e  r is followed by a character which is not               to be interpreted as part of its name          if the first character of   p  a  r  a  m  e  t  e  r is an exclamation point  a level of        variable indirection is introduced   b ba as sh h uses the value of  the  vari         able  formed  from  the  rest of   p  a  r  a  m  e  t  e  r as the name of the variable         this variable is then expanded and that value is used in  the  rest  of        the  substitution   rather than the value of   p  a  r  a  m  e  t  e  r itself   this is        known as   i  n  d  i  r  e  c  t   e  x  p  a  n  s  i  o  n   the exceptions to this are the expansions        of       p  r  e  f  i  x   and        n  a  m  e       described below   the exclamation point        must immediately follow the left brace in order to  introduce  indirec 
        tion         in each of the cases below    w  o  r  d is subject to tilde expansion  parame         ter expansion  command substitution  and  arithmetic  expansion    when        not  performing substring expansion  b ba as sh h tests for a parameter that is        unset or null  omitting the colon results in a test only for a  parame         ter that is unset             p  a  r  a  m  e  t  e  r        w  o  r  d                u us se e  d de ef fa au ul lt t  v va al lu ue es s   if   p  a  r  a  m  e  t  e  r is unset or null  the expan                sion of   w  o  r  d is substituted   otherwise  the value of    p  a  r  a  m  e  t  e  r               is substituted             p  a  r  a  m  e  t  e  r        w  o  r  d                a as ss si ig gn n  d de ef fa au ul lt t  v va al lu ue es s    if    p  a  r  a  m  e  t  e  r  is  unset or null  the               expansion of   w  o  r 
 d is assigned to   p  a  r  a  m  e  t  e  r   the value of   p  a  r  a  m                    e  t  e  r  is  then  substituted    positional parameters and special               parameters may not be assigned to in this way             p  a  r  a  m  e  t  e  r        w  o  r  d                d di is sp pl la ay y e er rr ro or r i if f n nu ul ll l o or r u un ns se et t   if   p  a  r  a  m  e  t  e  r is null or  unset                the  expansion  of    w  o  r  d  or a message to that effect if   w  o  r  d is               not present  is written to the standard error and the shell   if               it is not interactive  exits   otherwise  the value of   p  a  r  a  m  e  t  e  r               is substituted             p  a  r  a  m  e  t  e  r        w  o  r  d                u us se e a al lt te er rn na at te e v va al lu ue e   if   p  a  r  a  m  e  t  e  r is null or unset  nothing  is    
           substituted  otherwise the expansion of   w  o  r  d is substituted             p  a  r  a  m  e  t  e  r     o  f  f  s  e  t             p  a  r  a  m  e  t  e  r     o  f  f  s  e  t     l  e  n  g  t  h                s su ub bs st tr ri in ng g  e ex xp pa an ns si io on n      expands  to  up  to   l  e  n  g  t  h characters of                 p  a  r  a  m  e  t  e  r starting at the character  specified  by    o  f  f  s  e  t    if                 l  e  n  g  t  h  is omitted  expands to the substring of   p  a  r  a  m  e  t  e  r start                ing at the character specified by   o  f  f  s  e  t     l  e  n  g  t  h and   o  f  f  s  e  t are               arithmetic   expressions    see  a ar ri it th hm me et ti ic c  e ev va al lu ua at ti io on n  below                   l  e  n  g  t              current locale           a  r  g    o op p   a  r  g                  o op p is one of    e eq q     n ne e     l lt t     l le e     g gt t  or    g ge 
e   these  arithmetic               binary  operators return true if   a  r  g    is equal to  not equal to                less than  less than or equal to  greater than  or greater  than               or  equal  to   a  r  g     respectively     a  r  g    and   a  r  g    may be positive               or negative integers  s si im mp pl le e c co om mm ma an nd d e ex xp pa an ns si io on n        when a simple command is executed  the  shell  performs  the  following        expansions  assignments  and redirections  from left to right                the  words  that  the  parser has marked as variable assignments                those preceding the command name  and  redirections  are  saved               for later processing                the  words that are not variable assignments or redirections are               expanded   if any words remain after expansion  the  first  word               is  taken  to 
be the name of the command and the remaining words               are the arguments                redirections are performed as described above under r re ed di ir re ec ct ti io on n                the text after the     in each variable assignment undergoes tilde               expansion  parameter expansion  command substitution  arithmetic               expansion   and quote removal before being assigned to the vari                able         if no command name results  the variable assignments affect the current        shell  environment   otherwise  the variables are added to the environ         ment of the executed command and do not affect the current shell  envi         ronment    if  any  of  the assignments attempts to assign a value to a        readonly variable  an error occurs  and the command exits with  a  non         zero status         if  no  command  name  results   redirections are performed 
 but do not        affect the current shell environment   a redirection error  causes  the        command to exit with a non zero status         if  there is a command name left after expansion  execution proceeds as        described below   otherwise  the command exits   if one of  the  expan         sions  contained a command substitution  the exit status of the command        is the exit status of the  last  command  substitution  performed    if        there were no command substitutions  the command exits with a status of        zero  c co om mm ma an nd d e ex xe ec cu ut ti io on n        after a command has been split into words  if it results  in  a  simple        command  and  an  optional list of arguments  the following actions are        taken         if the command name contains no slashes  the shell attempts  to  locate        it    if  there  exists a shell function by that name  that function is        invoked 
as described above in f fu un nc ct ti io on ns s   if the name does not match  a        function   the shell searches for it in the list of shell builtins   if        a match is found  that builtin is invoked         if the name is neither a shell function nor a builtin  and contains  no        slashes   b ba as sh h  searches  each element of the p pa at th h for a directory con         taining an executable file by that name   b ba as sh h uses  a  hash  table  to        remember  the  full pathnames of executable files  see h ha as sh h under s sh he el ll l        b bu ui il lt ti in n c co om mm ma an nd ds s below    a full search of the directories in  p pa at th h  is        performed  only  if the command is not found in the hash table   if the        search is unsuccessful  the shell prints an error message  and  returns        an exit status of             if  the  search  is  successful  or 
if the command name contains one or        more slashes  the shell executes the named program in a separate execu         tion environment   argument   is set to the name given  and the remain         ing arguments to the command are set to the arguments given  if any         if this execution fails because the file is not in  executable  format         and  the file is not a directory  it is assumed to be a   s  h  e  l  l   s  c  r  i  p  t  a        file containing shell commands   a subshell is spawned to  execute  it         this  subshell  reinitializes itself  so that the effect is as if a new        shell had been invoked to handle the script  with  the  exception  that        the  locations  of  commands  remembered  by the parent  see h ha as sh h below        under s sh he el ll l b bu ui il lt ti in n c co om mm ma an nd ds s  are retained by the child         if the program is a file beginning with 
        the remainder of the  first        line  specifies an interpreter for the program   the shell executes the        specified interpreter on operating systems that do not handle this exe         cutable format themselves   the arguments to the interpreter consist of        a single optional argument following the interpreter name on the  first        line  of  the program  followed by the name of the program  followed by        the command arguments  if any  c co om mm ma an nd d e ex xe ec cu ut ti io on n e en nv vi ir ro on nm me en nt t        the shell has an   e  x  e  c  u  t  i  o  n   e  n  v  i  r  o  n  m  e  n  t  which consists of  the  follow         ing           o      open  files inherited by the shell at invocation  as modified by               redirections supplied to the e ex xe ec c builtin          o      the current working directory as set by c cd d  p pu us sh hd d  or  p po 
op pd d   or               inherited by the shell at invocation          o      the  file  creation  mode mask as set by u um ma as sk k or inherited from               the shell s parent          o      current traps set by t tr ra ap p          o      shell parameters that are set by variable assignment or with s se et t               or inherited from the shell s parent in the environment          o      shell  functions  defined during execution or inherited from the               shell s parent in the environment          o      options enabled at invocation  either by default  or  with  com                mand line arguments  or by s se et t          o      options enabled by s sh ho op pt t          o      shell aliases defined with a al li ia as s          o      various  process  ids   including  those of background jobs  the               value of         and the value of    p pp pi id d        when 
a simple command other than a builtin or shell function is  to  be        executed   it  is invoked in a separate execution environment that con         sists of the following   unless otherwise noted  the values are  inher         ited from the shell           o      the  shell s  open  files   plus any modifications and additions               specified by redirections to the command          o      the current working directory          o      the file creation mode mask          o      shell variables and functions  marked  for  export   along  with               variables exported for the command  passed in the environment          o      traps caught by the shell are reset to the values inherited from               the shell s parent  and traps ignored by the shell are ignored        a command invoked  in  this  separate  environment  cannot  affect  the        shell s execution environment         command 
 substitution  commands grouped with parentheses  and asynchro         nous commands are invoked in a subshell environment that is a duplicate        of  the  shell  environment   except that traps caught by the shell are        reset to the values that the shell inherited from its parent at invoca         tion   builtin commands that are invoked as part of a pipeline are also        executed in a subshell environment   changes made to the subshell envi         ronment cannot affect the shell s execution environment         if  a  command  is  followed  by a     and job control is not active  the        default standard input for the command is  the  empty  file       d  e  v     n  u  l  l         otherwise   the  invoked  command  inherits the file descriptors of the        calling shell as modified by redirections  e en nv vi ir ro on nm me en nt t        when a program is invoked it is given an array of  strings  called 
 the          e  n  v  i  r  o  n  m  e  n  t    this  is  a  list  of    n  a  m  e   v  a  l  u  e  pairs   of  the  form          n  a  m  e   v  a  l  u  e         the shell provides several ways  to  manipulate  the  environment    on        invocation  the shell scans its own environment and creates a parameter        for each name found  automatically marking it for   e  x  p  o  r  t to child  pro         cesses    executed  commands  inherit  the environment   the e ex xp po or rt t and        d de ec cl la ar re e    x x commands allow parameters and functions to be added  to  and        deleted from the environment   if the value of a parameter in the envi         ronment is modified  the new value becomes  part  of  the  environment         replacing  the  old   the environment inherited by any executed command        consists of the shell s initial environment  whose values may be  modi       
  fied  in  the  shell  less any pairs removed by the u un ns se et t command  plus        any additions via the e ex xp po or rt t and d de ec cl la ar re e    x x commands         the environment for any   s  i  m  p  l  e   c  o  m  m  a  n  d or  function  may  be  augmented        temporarily  by  prefixing  it with parameter assignments  as described        above in p pa ar ra am me et te er rs s   these assignment statements affect only the envi         ronment seen by that command         if  the     k k option is set  see the s se et t builtin command below   then   a  l  l        parameter assignments are placed in the environment for a command   not        just those that precede the command name         when  b ba as sh h  invokes  an  external command  the variable     is set to the        full file name of the command and passed to that command in  its  envi         ronment  e ex xi it t s st ta at tu us s       
 for the shell s purposes  a command which exits with a zero exit status        has succeeded   an exit status of zero indicates success    a  non zero        exit  status  indicates  failure   when a command terminates on a fatal        signal   n  b ba as sh h uses the value of       n as the exit status         if a command is not found  the child  process  created  to  execute  it        returns  a status of       if a command is found but is not executable         the return status is             if a command fails because of an error during expansion or redirection         the exit status is greater than zero         shell  builtin  commands return a status of      t  r  u  e  if successful  and        non zero    f  a  l  s  e  if an error occurs while they execute    all  builtins        return an exit status of   to indicate incorrect usage         b ba as sh h  itself  returns  the  exit  status  of the last 
command executed         unless a syntax error occurs  in which case it exits  with  a  non zero        value   see also the e ex xi it t builtin command below  s si ig gn na al ls s        when  b ba as sh h  is  interactive   in  the  absence of any traps  it ignores        s si ig gt te er rm m  so that k ki il ll l     does not kill an interactive shell   and s si ig gi in nt t        is  caught and handled  so that the w wa ai it t builtin is interruptible    in        all cases  b ba as sh h ignores s si ig gq qu ui it t   if job control  is  in  effect   b ba as sh h        ignores s si ig gt tt ti in n  s si ig gt tt to ou u  and s si ig gt ts st tp p         non builtin commands run by b ba as sh h have signal handlers set to the values        inherited by the shell from its parent   when job  control  is  not  in        effect   asynchronous commands ignore s si ig gi in nt t and s si ig gq qu ui it t in addition to        these inherited handlers   commands run as a result 
of command  substi         tution ignore the keyboard generated job control signals s si ig gt tt ti in n  s si ig gt t           t to ou u  and s si ig gt ts st tp p         the shell exits by default upon receipt of a s si ig gh hu up p    before  exiting         an  interactive  shell  resends  the  s si ig gh hu up p  to  all  jobs  running or        stopped   stopped jobs are sent s si ig gc co on nt t to ensure that they receive the        s si ig gh hu up p    to  prevent the shell from sending the signal to a particular        job  it should be removed from the jobs table with the  d di is so ow wn n  builtin         see  s sh he el ll l  b bu ui il lt ti in n  c co om mm ma an nd ds s  below   or marked to not receive s si ig gh hu up p        using d di is so ow wn n    h h         if the h hu up po on ne ex xi it t shell option has been set with  s sh ho op pt t   b ba as sh h  sends  a        s si ig gh hu up p to all jobs when an interactive login shell exits     
    if  b ba as sh h is waiting for a command to complete and receives a signal for        which a trap has been set  the trap will not be executed until the com         mand  completes    when b ba as sh h is waiting for an asynchronous command via        the w wa ai it t builtin  the reception of a signal for which a trap  has  been        set will cause the w wa ai it t builtin to return immediately with an exit sta         tus greater than      immediately after which the trap is executed  j jo ob b c co on nt tr ro ol l          j  o  b   c  o  n  t  r  o  l refers to the ability to  selectively  stop     s  u  s  p  e  n  d   the        execution of processes and continue    r  e  s  u  m  e  their execution at a later        point   a user typically  employs  this  facility  via  an  interactive        interface supplied jointly by the system s terminal driver and b ba as sh h         the  shell  associates  a    j  o  b with each pipeline   it keeps a table of        currently 
executing jobs  which may be listed with  the  j jo ob bs s  command         when  b ba as sh h starts a job asynchronously  in the   b  a  c  k  g  r  o  u  n  d   it prints a        line that looks like                                 indicating that this job is job number   and that the process id of the        last process in the pipeline associated with this job is         all of        the processes in a single pipeline are members of the same  job    b ba as sh h        uses the   j  o  b abstraction as the basis for job control         to  facilitate the implementation of the user interface to job control         the operating system maintains the notion of a   c  u  r  r  e  n  t   t  e  r  m  i  n  a  l   p  r  o  c  e  s  s          g  r  o  u  p   i  d   members of this process group  processes whose process group        id is equal to the current terminal process group id  receive keyboard     
    generated  signals  such  as s si ig gi in nt t   these processes are said to be in        the   f  o  r  e  g  r  o  u  n  d     b  a  c  k  g  r  o  u  n  d processes are those whose process group  id        differs from the terminal s  such processes are immune to keyboard gen         erated signals   only foreground processes are allowed to read from  or        write to the terminal   background processes which attempt to read from         write to  the terminal are sent a s si ig gt tt ti in n    s si ig gt tt to ou u    signal by the ter         minal driver  which  unless caught  suspends the process         if  the operating system on which b ba as sh h is running supports job control         b ba as sh h contains facilities to use it   typing the   s  u  s  p  e  n  d character  typ         ically    z z  control z  while a process is running causes that process to        be stopped and returns 
control to b ba as sh h    typing  the    d  e  l  a  y  e  d    s  u  s  p  e  n  d        character   typically     y y   control y  causes the process to be stopped        when it attempts to read input from the terminal   and  control  to  be        returned  to b ba as sh h   the user may then manipulate the state of this job         using the b bg g command to continue it in the background  the  f fg g  command        to continue it in the foreground  or the k ki il ll l command to kill it   a    z z        takes effect immediately  and has the additional side effect of causing        pending output and typeahead to be discarded         there are a number of ways to refer to a job in the shell   the charac         ter     introduces a job name   job number   n may be referred to as    n n   a        job  may  also  be referred to using a prefix of the name used to start        it  or using a substring that appears 
in its command line    for  exam         ple     c ce e refers to a stopped c ce e job   if a prefix matches more than one        job  b ba as sh h reports an error   using       c ce e  on the other hand   refers  to        any job containing the string c ce e in its command line   if the substring        matches more than one job  b ba as sh h reports an error   the symbols          and                refer  to  the shell s notion of the   c  u  r  r  e  n  t   j  o  b  which is the last        job stopped while it was in the foreground  or  started  in  the  back         ground    the    p  r  e  v  i  o  u  s   j  o  b may be referenced using          in output per         taining to jobs  e g   the output of the j jo ob bs s command   the current job        is  always flagged with a      and the previous job with a       a single           with no accompanying job specification  also  refers  to  the  current        job         simply  naming a job can be used to bring it into 
the foreground         is        a synonym for       f fg g               bringing job   from the  background  into  the        foreground    similarly                            resumes  job    in the background         equivalent to       b bg g                      the shell learns immediately whenever a job changes  state    normally         b ba as sh h waits until it is about to print a prompt before reporting changes        in a job s status so as to not interrupt any other output   if  the     b b        option to the s se et t builtin command is enabled  b ba as sh h reports such changes        immediately   any trap on s si ig gc ch hl ld d  is  executed  for  each  child  that        exits         if  an  attempt  to exit b ba as sh h is made while jobs are stopped  the shell        prints a warning message   the j jo ob bs s command may then be used to inspect        their status   if a second attempt 
to exit is made without an interven         ing command  the shell does not print another warning  and the  stopped        jobs are terminated  p pr ro om mp pt ti in ng g        when executing interactively  b ba as sh h displays the primary prompt p ps s    when        it is ready to read a command  and the secondary  prompt  p ps s     when  it        needs  more  input  to  complete  a  command   b ba as sh h allows these prompt        strings to be customized by inserting  a  number  of  backslash escaped        special characters that are decoded as follows                   a a     an ascii bell character                       d d     the  date  in  weekday month date  format  e g    tue may                                            d d     f  o  r  m  a  t                         the   f  o  r  m  a  t is passed to   s  t  r  f  t  i  m  e     and  the  result  is                      inserted  into the prompt string  an empty   f  o  r  m  a  t results                      
in a locale specific time representation   the braces are                      required                  e e     an ascii escape character                        h h     the hostname up to the first                      h h     the hostname                  j j     the number of jobs currently managed by the shell                  l l     the basename of the shell s terminal device name                  n n     newline                  r r     carriage return                  s s     the  name  of  the shell  the basename of         the portion                      following the final slash                   t t     the current time in    hour hh mm ss format                  t t     the current time in    hour hh mm ss format                          the current time in    hour am pm format                  a a     the current time in    hour hh mm format                  u u     the username of the current 
user                  v v     the version of b ba as sh h  e g                          v v     the release of b ba as sh h  version   patch level  e g                            w w     the  current  working  directory   with    h ho om me e abbreviated                      with a tilde                  w w     the basename of the current working directory  with    h ho om me e                      abbreviated with a tilde                          the history number of this command                          the command number of this command                          if the effective uid is    a      otherwise a                        n  n  n   the character corresponding to the octal number   n  n  n                          a backslash                          begin  a sequence of non printing characters  which could                      be used to embed a terminal  control  sequence  into  the                  
    prompt                          end a sequence of non printing characters        the  command  number  and the history number are usually different  the        history number of a command is its position in the history list   which        may  include  commands  restored  from  the  history  file  see h hi is st to or ry y        below   while the command number is the position  in  the  sequence  of        commands  executed  during the current shell session   after the string        is decoded  it is expanded via parameter expansion   command  substitu         tion   arithmetic expansion  and quote removal  subject to the value of        the p pr ro om mp pt tv va ar rs s shell option  see the description of the  s sh ho op pt t  command        under s sh he el ll l b bu ui il lt ti in n c co om mm ma an nd ds s below   r re ea ad dl li in ne e        this  is  the library that handles reading input when using an interac         tive shell  unless the       n no oe ed di it 
ti in ng g option is given at shell invocation         by default  the line editing commands are similar to those of emacs   a        vi style line editing interface is also available   to  turn  off  line        editing  after  the shell is running  use the    o o e em ma ac cs s or    o o v vi i options        to the s se et t builtin  see s sh he el ll l b bu ui il lt ti in n c co om mm ma an nd ds s below      r re ea ad dl li in ne e n no ot ta at ti io on n        in this section  the emacs style notation is used to denote keystrokes         control  keys  are  denoted by c   k  e  y  e g   c n means control n   simi         larly    m  e  t  a keys are denoted by m   k  e  y  so m x means meta x     on  key         boards  without a   m  e  t  a key  m   x means esc   x  i e   press the escape key        then the   x key   this makes esc the   m  e  t  a   p  r  e  f  i  x   the combination m c   x    
    means  esc control   x  or press the escape key then hold the control key        while pressing the   x key          readline commands may be given numeric   a  r  g  u  m  e  n  t  s  which normally act as        a  repeat  count    sometimes   however  it is the sign of the argument        that is significant   passing a negative argument  to  a  command  that        acts  in the forward direction  e g   k ki il ll l   l li in ne e  causes that command to        act in a backward direction   commands whose  behavior  with  arguments        deviates from this are noted below         when  a command is described as   k  i  l  l  i  n  g text  the text deleted is saved        for possible future retrieval    y  a  n  k  i  n  g    the killed text is saved in a          k  i  l  l   r  i  n  g   consecutive kills cause the text to be accumulated into one        unit  which can be yanked all at once   commands which 
do not kill text        separate the chunks of text on the kill ring     r re ea ad dl li in ne e i in ni it ti ia al li iz za at ti io on n        readline  is  customized  by putting commands in an initialization file         the   i  n  p  u  t  r  c file    the name of this file is taken from the  value  of        the  i in np pu ut tr rc c  variable    if  that  variable  is  unset  the default is                   i  n  p  u  t  r  c   when a program which uses the readline library starts  up         the initialization file is read  and the key bindings and variables are        set   there are only a few basic constructs  allowed  in  the  readline        initialization  file   blank lines are ignored   lines beginning with a            are comments   lines beginning with a       indicate  conditional  con         structs   other lines denote key bindings and variable settings         the  default  key 
bindings  may be changed with an   i  n  p  u  t  r  c file   other        programs that use this library may add their own commands and bindings         for example  placing               m control u  universal argument        or               c meta u  universal argument        into  the   i  n  p  u  t  r  c would make m c u execute the readline command   u  n  i  v  e  r             s  a  l     a  r  g  u  m  e  n  t         the following symbolic character names  are  recognized     r  u  b  o  u  t     d  e  l           e  s  c    l  f  d    n  e  w  l  i  n  e    r  e  t    r  e  t  u  r  n    s  p  c    s  p  a  c  e  and   t  a  b         in  addition  to  command  names  readline allows keys to be bound to a        string that is inserted when the key is pressed  a   m  a  c  r  o      r re ea ad dl li in ne e k ke ey y b bi in nd di in ng gs s        the syntax for controlling key bindings in the   i 
 n  p  u  t  r  c file is  simple         all  that is required is the name of the command or the text of a macro        and a key sequence to which it should be bound  the name may be  speci         fied in one of two ways  as a symbolic key name  possibly with   m  e  t  a    or          c  o  n  t  r  o  l    prefixes  or as a key sequence         when using the form k ke ey yn na am me e   f  u  n  c  t  i  o  n     n  a  m  e or   m  a  c  r  o    k  e  y  n  a  m  e is the name        of a key spelled out in english   for example                control u  universal argument               meta rubout  backward kill word               control o     output         in  the above example    c     u is bound to the function u un ni iv ve er rs sa al l   a ar rg gu um me en nt t           m     d  e  l is bound to the function b ba ac ck kw wa ar rd d   k ki il ll l   w wo or rd d  and   c     o is bound  to        
run  the macro expressed on the right hand side  that is  to insert the        text     output   into the line          in the second form     k ke ey ys se eq q      f  u  n  c  t  i  o  n     n  a  m  e  or    m  a  c  r  o   k ke ey ys se eq q  differs        from  k ke ey yn na am me e above in that strings denoting an entire key sequence may        be specified by placing the sequence within double  quotes    some  gnu        emacs  style  key escapes can be used  as in the following example  but        the symbolic character names are not recognized                  c u   universal argument                 c x c r   re read init file                 e        function key           in this example    c     u is again bound to the function u un ni iv ve er rs sa al l   a ar rg gu um me en nt t           c     x    c     r is bound to the function r re e   r re ea ad d   i in ni it t   f fi il le e  and 
  e  s  c                 is        bound to insert the text   function key              the full set of gnu emacs style escape sequences is                  c c       control prefix                  m m       meta prefix                  e e     an escape character                          backslash                          literal                            literal          in addition to the gnu emacs style escape sequences  a  second  set  of        backslash escapes is available                   a a     alert  bell                   b b     backspace                  d d     delete                  f f     form feed                  n n     newline                  r r     carriage return                  t t     horizontal tab                  v v     vertical tab                    n  n  n   the  eight bit  character  whose value is the octal value                        n  n  n  one to three digits 
                  x x  h  h   the eight bit character whose value  is  the  hexadecimal                      value   h  h  one or two hex digits         when entering the text of a macro  single or double quotes must be used        to indicate a macro definition   unquoted text is assumed to be a func         tion  name    in  the macro body  the backslash escapes described above        are expanded   backslash will quote any other character  in  the  macro        text  including   and           b ba as sh h  allows the current readline key bindings to be displayed or modi         fied with the b bi in nd d builtin command   the editing mode may  be  switched        during  interactive  use by using the    o o option to the s se et t builtin com         mand  see s sh he el ll l b bu ui il lt ti in n c co om mm ma an nd ds s below       r re ea ad dl li in ne e v va ar ri ia ab bl le es s        readline has variables 
that can be used to further customize its behav         ior   a variable may be set in the   i  n  p  u  t  r  c file with a statement of the        form               s se et t   v  a  r  i  a  b  l  e     n  a  m  e   v  a  l  u  e        except where noted  readline variables can take the values  o on n  or  o of ff f         without  regard  to  case     unrecognized variable names are ignored         when a variable value is read  empty or null values   on    case insen         sitive   and     are equivalent to o on n   all other values are equivalent        to o of ff f   the variables and their default values are         b be el ll l   s st ty yl le e    a au ud di ib bl le e                  controls what happens when readline wants to ring  the  terminal               bell   if set to n no on ne e  readline never rings the bell   if set to               v vi is si ib bl le e  readline uses a visible bell if one is  available    if               set to a au ud di ib bl le 
e  readline attempts to ring the terminal s bell         b bi in nd d   t tt ty y   s sp pe ec ci ia al l   c ch ha ar rs s    o on n                  if  set  to o on n  readline attempts to bind the control characters               treated specially by the kernel s terminal driver to their read                line equivalents         c co om mm me en nt t   b be eg gi in n                                     the  string  that  is  inserted when the readline i in ns se er rt t   c co om mm me en nt t               command is executed   this command is bound to m m       in emacs mode               and to     in vi command mode         c co om mp pl le et ti io on n   i ig gn no or re e   c ca as se e    o of ff f                  if set to o on n  readline performs filename matching and completion               in a case insensitive fashion         c co om mp pl le et ti io on n   q qu ue er ry y   i it te em ms s 
                              this determines when the user is queried about viewing the  num                ber  of  possible  completions generated by the p po os ss si ib bl le e   c co om mp pl le e                  t ti io on ns s command   it may be set to any integer value greater  than               or  equal  to  zero    if  the number of possible completions is               greater than or equal to the value of this variable  the user is               asked  whether or not he wishes to view them  otherwise they are               simply listed on the terminal         c co on nv ve er rt t   m me et ta a    o on n                  if set to o on n  readline will convert characters with  the  eighth               bit set to an ascii key sequence by stripping the eighth bit and               prefixing an escape character  in effect  using  escape  as  the                 m  e  t  a   p  r  e  f  i  x          d di is sa ab bl le e   c co om mp pl le et ti io on n    o of ff 
f                  if set to o on n  readline will inhibit word completion   completion               characters will be inserted into the line as if  they  had  been               mapped to s se el lf f   i in ns se er rt t         e ed di it ti in ng g   m mo od de e    e em ma ac cs s                  controls whether readline begins with a set of key bindings sim                ilar to   e  m  a  c  s or   v  i   e ed di it ti in ng g   m mo od de e can be set to either e em ma ac cs s or               v vi i         e en na ab bl le e   k ke ey yp pa ad d    o of ff f                  when set to o on n  readline will try to enable the application key                pad when it is called   some systems need  this  to  enable  the               arrow keys         e ex xp pa an nd d   t ti il ld de e    o of ff f                  if  set  to  o on n   tilde  expansion  is  performed  when readline               attempts word completion         h hi is st to or ry y   p pr re es 
se er rv ve e   p po oi in nt t    o of ff f                  if set to o on n  the history code attempts to place  point  at  the               same  location on each history line retrieved with p pr re ev vi io ou us s   h hi is s                  t to or ry y or n ne ex xt t   h hi is st to or ry y         h ho or ri iz zo on nt ta al l   s sc cr ro ol ll l   m mo od de e    o of ff f                  when set to o on n  makes readline use a single  line  for  display                scrolling the input horizontally on a single screen line when it               becomes longer than the screen width rather than wrapping  to  a               new line         i in np pu ut t   m me et ta a    o of ff f                  if  set to o on n  readline will enable eight bit input  that is  it               will not strip the high  bit  from  the  characters  it  reads                 regardless of what the terminal 
claims it can support   the name               m me et ta a   f fl la ag g is a synonym for this variable         i is se ea ar rc ch h   t te er rm mi in na at to or rs s          c c      c c   j j                        the string of characters that should  terminate  an  incremental               search  without  subsequently  executing the character as a com                mand   if this variable has not been given a value  the  charac                ters   e  s  c and   c     j will terminate an incremental search         k ke ey ym ma ap p    e em ma ac cs s                  set  the current readline keymap   the set of valid keymap names               is   e  m  a  c  s      e  m  a  c  s     s  t  a  n  d  a  r  d      e  m  a  c  s     m  e  t  a       e  m  a  c  s     c  t  l  x       v  i       v  i     c  o  m                    m  a  n  d   and    v  i     i  n  s  e  r  t     v  i is equivalent to   v  i 
    c  o  m  m  a  n  d    e  m  a  c  s is               equivalent to   e  m  a  c  s     s  t  a  n  d  a  r  d   the default value is    e  m  a  c  s   the               value of e ed di it ti in ng g   m mo od de e also affects the default keymap         m ma ar rk k   d di ir re ec ct to or ri ie es s    o on n                  if set to o on n  completed directory names have a slash appended         m ma ar rk k   m mo od di if fi ie ed d   l li in ne es s    o of ff f                  if  set  to  o on n   history lines that have been modified are dis                played with a preceding asterisk               m ma ar rk k   s sy ym ml li in nk ke ed d   d di ir re ec ct to or ri ie es s    o of ff f                  if set to o on n  completed names which are symbolic links to direc                tories   have   a  slash  appended   subject  to  the  value  of               m ma ar rk k   d di ir re ec ct to or ri ie es s          m ma at tc ch h   h hi id dd de en 
n   f fi il le es s    o on n                  this variable  when set to o on n  causes readline  to  match  files               whose  names  begin  with  a       hidden files  when performing               filename completion  unless the leading     is supplied  by  the               user in the filename to be completed         o ou ut tp pu ut t   m me et ta a    o of ff f                  if  set  to o on n  readline will display characters with the eighth               bit set directly rather than as a meta prefixed escape sequence         p pa ag ge e   c co om mp pl le et ti io on ns s    o on n                  if  set to o on n  readline uses an internal   m  o  r  e like pager to dis                play a screenful of possible completions at a time         p pr ri in nt t   c co om mp pl le et ti io on ns s   h ho or ri iz zo on nt ta al ll ly y    o of ff f                  if set to o on 
n  readline will  display  completions  with  matches               sorted  horizontally in alphabetical order  rather than down the               screen         s sh ho ow w   a al ll l   i if f   a am mb bi ig gu uo ou us s    o of ff f                  this alters the default behavior of  the  completion  functions                if set to o on n  words which have more than one possible completion               cause the matches to be listed immediately  instead  of  ringing               the bell         s sh ho ow w   a al ll l   i if f   u un nm mo od di if fi ie ed d    o of ff f                  this  alters the default behavior of the completion functions in               a fashion similar to s sh ho ow w   a al ll l   i if f   a am mb bi ig gu uo ou us s   if set to o on n  words               which  have more than one possible completion without any possi                ble partial completion  the 
possible completions don t  share  a               common  prefix   cause  the  matches  to  be  listed immediately               instead of ringing the bell         v vi is si ib bl le e   s st ta at ts s    o of ff f                  if set to o on n  a character denoting a file s type as reported  by                 s  t  a  t     is  appended to the filename when listing possible com                pletions      r re ea ad dl li in ne e c co on nd di it ti io on na al l c co on ns st tr ru uc ct ts s        readline implements a facility similar in  spirit  to  the  conditional        compilation  features  of  the c preprocessor which allows key bindings        and variable settings to be performed as the result  of  tests    there        are four parser directives used            i if f    the     i if f construct allows bindings to be made based on the edit                ing mode  the terminal being 
 used   or  the  application  using               readline    the text of the test extends to the end of the line                no characters are required to isolate it                m mo od de e   the m mo od de e    form of the     i if f  directive  is  used  to  test                      whether  readline  is  in  emacs or vi mode   this may be                      used in conjunction with  the  s se et t  k ke ey ym ma ap p  command   for                      instance   to  set  bindings  in  the    e  m  a  c  s     s  t  a  n  d  a  r  d and                        e  m  a  c  s     c  t  l  x keymaps only if readline is  starting  out  in                      emacs mode                t te er rm m   the  t te er rm m     form may be used to include terminal specific                      key bindings  perhaps to bind the key sequences output by                      the terminal s function keys   the 
word on the right side                      of the     is tested against the both full name of the ter                       minal  and  the  portion  of the terminal name before the                      first       this allows   s  u  n to match both   s  u  n and    s  u  n     c  m  d                       for instance                a ap pp pl li ic ca at ti io on n                      the a ap pp pl li ic ca at ti io on n construct is used to include application                       specific  settings    each  program  using  the  readline                      library  sets the   a  p  p  l  i  c  a  t  i  o  n   n  a  m  e  and an initialization                      file can test for a particular value   this could be used                      to  bind key sequences to functions useful for a specific                      program   for instance  the following command adds a  key                      sequence  that  quotes  the  current  or previous word in                     
 bash                          i if f bash                        quote the current or previous word                        c xq     eb   ef                            e en nd di if f           e en nd di if f this command  as seen in the previous example  terminates an    i if f               command            e el ls se e  commands in this branch of the    i if f directive are executed if the               test fails            i in nc cl lu ud de e               this directive takes a single filename as an argument and  reads               commands  and bindings from that file   for example  the follow                ing directive would read      e  t  c     i  n  p  u  t  r  c                   i in nc cl lu ud de e       e  t  c     i  n  p  u  t  r  c    s se ea ar rc ch hi in ng g        readline provides commands for searching through  the  command  history         see h hi is st to or ry y below  for lines 
containing a specified string   there are        two search modes    i  n  c  r  e  m  e  n  t  a  l and   n  o  n     i  n  c  r  e  m  e  n  t  a  l         incremental searches begin before the  user  has  finished  typing  the        search  string   as each character of the search string is typed  read         line displays the next entry from the history matching the string typed        so  far    an  incremental  search  requires only as many characters as        needed to find the desired history entry   the  characters  present  in        the  value of the i is se ea ar rc ch h   t te er rm mi in na at to or rs s variable are used to terminate an        incremental search   if that variable has not been assigned a value the        escape  and  control j characters will terminate an incremental search         control g will abort an incremental search  and  restore  the  original        line    when the search is 
terminated  the history entry containing the        search string becomes the current line         to find other matching entries in the history list  type  control s  or        control r  as appropriate   this will search backward or forward in the        history for the next entry matching the search  string  typed  so  far         any  other  key sequence bound to a readline command will terminate the        search and execute that command   for instance  a   n  e  w  l  i  n  e  will  termi         nate the search and accept the line  thereby executing the command from        the history list         readline remembers the last incremental search string   if two control         rs  are  typed without any intervening characters defining a new search        string  any remembered search string is used         non incremental searches read the entire search string before  starting        to  search  for matching 
history lines   the search string may be typed        by the user or be part of the contents of the current line     r re ea ad dl li in ne e c co om mm ma an nd d n na am me es s        the following is a list of the names of the commands  and  the  default        key sequences to which they are bound   command names without an accom         panying key sequence are unbound by default   in the following descrip         tions     p  o  i  n  t refers to the current cursor position  and   m  a  r  k refers to        a cursor position saved by the s se et t   m ma ar rk k command   the text between  the        point and mark is referred to as the   r  e  g  i  o  n     c co om mm ma an nd ds s f fo or r m mo ov vi in ng g        b be eg gi in nn ni in ng g   o of f   l li in ne e    c c   a a                  move to the start of the current line         e en nd d   o of f   l li in ne e    c c   e e        
          move to the end of the line         f fo or rw wa ar rd d   c ch ha ar r    c c   f f                  move forward a character         b ba ac ck kw wa ar rd d   c ch ha ar r    c c   b b                  move back a character         f fo or rw wa ar rd d   w wo or rd d    m m   f f                  move forward to the end of the next word   words are composed of               alphanumeric characters  letters and digits          b ba ac ck kw wa ar rd d   w wo or rd d    m m   b b                  move back to the start of the current or previous  word    words               are composed of alphanumeric characters  letters and digits          c cl le ea ar r   s sc cr re ee en n    c c   l l                  clear  the  screen  leaving  the  current line at the top of the               screen   with an argument   refresh  the  current  line  without               clearing the screen         r re ed dr ra aw w   c cu ur rr re en nt t   l li in ne e               refresh the 
current line     c co om mm ma an nd ds s f fo or r m ma an ni ip pu ul la at ti in ng g t th he e h hi is st to or ry y        a ac cc ce ep pt t   l li in ne e    n ne ew wl li in ne e    r re et tu ur rn n                  accept the line regardless of where the cursor is   if this line               is non empty  add it to the history list according to the  state               of  the h hi is st tc co on nt tr ro ol l variable   if the line is a modified history               line  then restore the history line to its original state         p pr re ev vi io ou us s   h hi is st to or ry y    c c   p p                  fetch the previous command from the history list  moving back in               the list         n ne ex xt t   h hi is st to or ry y    c c   n n                  fetch  the next command from the history list  moving forward in               the list         b be eg gi in nn ni in ng g   o of 
f   h hi is st to or ry y    m m                        move to the first line in the history         e en nd d   o of f   h hi is st to or ry y    m m                        move to the end of the input history  i e   the  line  currently               being entered         r re ev ve er rs se e   s se ea ar rc ch h   h hi is st to or ry y    c c   r r                  search  backward  starting  at  the current line and moving  up                through the  history  as  necessary    this  is  an  incremental               search         f fo or rw wa ar rd d   s se ea ar rc ch h   h hi is st to or ry y    c c   s s                  search  forward  starting  at the current line and moving  down                through the  history  as  necessary    this  is  an  incremental               search         n no on n   i in nc cr re em me en nt ta al l   r re ev ve er rs se e   s se ea ar rc ch h   h hi is st to or 
ry y    m m   p p                  search backward through the history starting at the current line               using a non incremental search for  a  string  supplied  by  the               user         n no on n   i in nc cr re em me en nt ta al l   f fo or rw wa ar rd d   s se ea ar rc ch h   h hi is st to or ry y    m m   n n                  search  forward  through  the  history  using  a non incremental               search for a string supplied by the user         h hi is st to or ry y   s se ea ar rc ch h   f fo or rw wa ar rd d               search forward through the history for the string of  characters               between  the start of the current line and the point   this is a               non incremental search         h hi is st to or ry y   s se ea ar rc ch h   b ba ac ck kw wa ar rd d               search backward through the history for the string of characters               between  the start of the current line and the point   this is a               non 
incremental search         y ya an nk k   n nt th h   a ar rg g    m m   c c   y y                  insert the first argument to the previous command   usually  the               second word on the previous line  at point   with an argument   n                insert the   nth word from the previous command  the words in  the               previous  command  begin  with  word        a  negative argument               inserts the   nth word from the end of the previous command   once               the  argument   n is computed  the argument is extracted as if the                   n  history expansion had been specified         y ya an nk k   l la as st t   a ar rg g    m m          m m                        insert the last argument to the previous command  the last  word               of  the  previous  history  entry     with  an  argument  behave               exactly like y ya an nk k   n nt th h   a ar rg g   successive  calls  to  y ya an nk k   l la as st t   a ar rg g 
              move  back through the history list  inserting the last argument               of each line in turn   the history expansion facilities are used               to  extract  the last argument  as if the      history expansion               had been specified         s sh he el ll l   e ex xp pa an nd d   l li in ne e    m m   c c   e e                  expand the line as the shell does   this performs alias and his                tory expansion as well as all of the shell word expansions   see               h hi is st to or ry y e ex xp pa an ns si io on n below for a description of history  expansion         h hi is st to or ry y   e ex xp pa an nd d   l li in ne e    m m                        perform  history  expansion  on  the  current line   see h hi is st to or ry y               e ex xp pa an ns si io on n below for a description of history expansion         m ma ag gi ic c   s sp pa ac ce e               perform history expansion on  the  current  line  and  insert  
a               space   see h hi is st to or ry y e ex xp pa an ns si io on n below for a description of history               expansion         a al li ia as s   e ex xp pa an nd d   l li in ne e               perform alias expansion on the current line   see a al li ia as se es s  above               for a description of alias expansion         h hi is st to or ry y   a an nd d   a al li ia as s   e ex xp pa an nd d   l li in ne e               perform history and alias expansion on the current line         i in ns se er rt t   l la as st t   a ar rg gu um me en nt t    m m          m m                        a synonym for y ya an nk k   l la as st t   a ar rg g         o op pe er ra at te e   a an nd d   g ge et t   n ne ex xt t    c c   o o                  accept  the  current  line for execution and fetch the next line               relative to the current line from the history for editing    any    
           argument is ignored         e ed di it t   a an nd d   e ex xe ec cu ut te e   c co om mm ma an nd d    c c   x xc c   e e                  invoke  an  editor  on the current command line  and execute the               result as shell commands    b ba as sh h  attempts  to  invoke     f fc ce ed di it t                   e ed di it to or r  and   e  m  a  c  s as the editor  in that order     c co om mm ma an nd ds s f fo or r c ch ha an ng gi in ng g t te ex xt t        d de el le et te e   c ch ha ar r    c c   d d                  delete  the character at point   if point is at the beginning of               the line  there are no characters in  the  line   and  the  last               character typed was not bound to d de el le et te e   c ch ha ar r  then return e eo of f         b ba ac ck kw wa ar rd d   d de el le et te e   c ch ha ar r    r ru ub bo ou ut t                  delete  the  character 
 behind the cursor   when given a numeric               argument  save the deleted text on the kill ring         f fo or rw wa ar rd d   b ba ac ck kw wa ar rd d   d de el le et te e   c ch ha ar r               delete the character under the cursor  unless the cursor  is  at               the end of the line  in which case the character behind the cur                sor is deleted         q qu uo ot te ed d   i in ns se er rt t    c c   q q    c c   v v                  add the next character typed to the line verbatim   this is  how               to insert characters like c c   q q  for example         t ta ab b   i in ns se er rt t    c c   v v t ta ab b                  insert a tab character         s se el lf f   i in ns se er rt t    a a    b b    a a                                             insert the character typed         t tr ra an ns sp po os se e   c ch ha ar rs s    c c   t t                  drag  the  character  before point forward over the character at          
     point  moving point forward as well   if point is at the end  of               the  line  then this transposes the two characters before point                negative arguments have no effect         t tr ra an ns sp po os se e   w wo or rd ds s    m m   t t                  drag the word before point past the  word  after  point   moving               point  over  that  word  as well   if point is at the end of the               line  this transposes the last two words on the line         u up pc ca as se e   w wo or rd d    m m   u u                  uppercase the current  or  following   word    with  a  negative               argument  uppercase the previous word  but do not move point         d do ow wn nc ca as se e   w wo or rd d    m m   l l                  lowercase  the  current   or  following   word   with a negative               argument  lowercase the previous word  but do not move point        
 c ca ap pi it ta al li iz ze e   w wo or rd d    m m   c c                  capitalize the current  or following   word    with  a  negative               argument  capitalize the previous word  but do not move point         o ov ve er rw wr ri it te e   m mo od de e               toggle  overwrite mode   with an explicit positive numeric argu                ment  switches to overwrite mode   with an explicit non positive               numeric argument  switches to insert mode   this command affects               only e em ma ac cs s mode  v vi i mode does overwrite differently   each  call               to   r  e  a  d  l  i  n  e       starts in insert mode   in overwrite mode  charac                ters bound to s se el lf f   i in ns se er rt t replace the text at point rather  than               pushing  the  text  to  the  right    characters  bound to b ba ac ck k                  w wa ar rd d   d de el le et te 
e   c ch ha ar r replace  the  character  before  point  with  a               space   by default  this command is unbound     k ki il ll li in ng g a an nd d y ya an nk ki in ng g        k ki il ll l   l li in ne e    c c   k k                  kill the text from point to the end of the line         b ba ac ck kw wa ar rd d   k ki il ll l   l li in ne e    c c   x x r ru ub bo ou ut t                  kill backward to the beginning of the line         u un ni ix x   l li in ne e   d di is sc ca ar rd d    c c   u u                  kill  backward  from  point  to  the beginning of the line   the               killed text is saved on the kill ring         k ki il ll l   w wh ho ol le e   l li in ne e               kill all characters on the current line  no matter  where  point               is         k ki il ll l   w wo or rd d    m m   d d                  kill  from  point  to the end of the current 
word  or if between               words  to the end of the next word    word  boundaries  are  the               same as those used by f fo or rw wa ar rd d   w wo or rd d         b ba ac ck kw wa ar rd d   k ki il ll l   w wo or rd d    m m   r ru ub bo ou ut t                  kill  the  word  behind  point   word boundaries are the same as               those used by b ba ac ck kw wa ar rd d   w wo or rd d         u un ni ix x   w wo or rd d   r ru ub bo ou ut t    c c   w w                  kill the word behind point  using white space as a  word  bound                ary   the killed text is saved on the kill ring         u un ni ix x   f fi il le en na am me e   r ru ub bo ou ut t               kill  the  word  behind  point   using white space and the slash               character as the word boundaries   the killed text is  saved  on               the kill ring         d de el le et te e   h ho or ri 
iz zo on nt ta al l   s sp pa ac ce e    m m                        delete all spaces and tabs around point         k ki il ll l   r re eg gi io on n               kill the text in the current region         c co op py y   r re eg gi io on n   a as s   k ki il ll l               copy the text in the region to the kill buffer         c co op py y   b ba ac ck kw wa ar rd d   w wo or rd d               copy  the word before point to the kill buffer   the word bound                aries are the same as b ba ac ck kw wa ar rd d   w wo or rd d         c co op py y   f fo or rw wa ar rd d   w wo or rd d               copy the word following point to  the  kill  buffer    the  word               boundaries are the same as f fo or rw wa ar rd d   w wo or rd d         y ya an nk k    c c   y y                  yank the top of the kill ring into the buffer at point         y ya an nk k   p po op p    m m   y y       
           rotate  the kill ring  and yank the new top   only works follow                ing y ya an nk k or y ya an nk k   p po op p     n nu um me er ri ic c a ar rg gu um me en nt ts s        d di ig gi it t   a ar rg gu um me en nt t    m m          m m                       m m                        add this digit to the argument already accumulating  or start  a               new argument   m   starts a negative argument         u un ni iv ve er rs sa al l   a ar rg gu um me en nt t               this  is another way to specify an argument   if this command is               followed by one or more digits  optionally with a leading  minus               sign   those digits define the argument   if the command is fol                lowed by digits  executing  u un ni iv ve er rs sa al l   a ar rg gu um me en nt t  again  ends  the               numeric  argument  but is otherwise ignored   as a special case                if this command is immediately followed by a character 
 that  is               neither  a  digit or minus sign  the argument count for the next               command is multiplied by four   the argument count is  initially               one   so  executing this function the first time makes the argu                ment count four  a second time makes the argument count sixteen                and so on     c co om mp pl le et ti in ng g        c co om mp pl le et te e    t ta ab b                  attempt  to  perform  completion on the text before point   b ba as sh h               attempts completion treating the text as a variable  if the text               begins  with        username  if the text begins with       hostname                if the text begins with       or command  including  aliases  and               functions  in turn   if none of these produces a match  filename               completion is attempted         p po os ss si ib bl le e   c co om mp pl le et ti io on ns s    m m                        list the possible 
completions of the text before point         i in ns se er rt t   c co om mp pl le et ti io on ns s    m m                        insert all completions of the text before point that would  have               been generated by p po os ss si ib bl le e   c co om mp pl le et ti io on ns s         m me en nu u   c co om mp pl le et te e               similar  to c co om mp pl le et te e  but replaces the word to be completed with               a single match from the list of possible completions    repeated               execution  of  m me en nu u   c co om mp pl le et te e  steps through the list of possible               completions  inserting each match in turn   at the  end  of  the               list of completions  the bell is rung  subject to the setting of               b be el ll l   s st ty yl le e  and the original text is restored   an argument of   n               moves    n  positions  forward 
 in the list of matches  a negative               argument may be used to move backward through  the  list    this               command  is  intended  to  be  bound  to  t ta ab b  but is unbound by               default         d de el le et te e   c ch ha ar r   o or r   l li is st t               deletes the character under the cursor if not at  the  beginning               or  end  of  the  line  like d de el le et te e   c ch ha ar r    if at the end of the               line  behaves identically to p po os ss si ib bl le e   c co om mp pl le et ti io on ns s   this command               is unbound by default         c co om mp pl le et te e   f fi il le en na am me e    m m                        attempt filename completion on the text before point         p po os ss si ib bl le e   f fi il le en na am me e   c co om mp pl le et ti io on ns s    c c   x x                      list the possible completions 
of the text before point  treating               it as a filename         c co om mp pl le et te e   u us se er rn na am me e    m m                        attempt completion on the text before point  treating  it  as  a               username         p po os ss si ib bl le e   u us se er rn na am me e   c co om mp pl le et ti io on ns s    c c   x x                      list the possible completions of the text before point  treating               it as a username         c co om mp pl le et te e   v va ar ri ia ab bl le e    m m                        attempt completion on the text before point  treating  it  as  a               shell variable         p po os ss si ib bl le e   v va ar ri ia ab bl le e   c co om mp pl le et ti io on ns s    c c   x x                      list the possible completions of the text before point  treating               it as a shell variable         c co om mp pl le et te 
e   h ho os st tn na am me e    m m                        attempt completion on the text before point  treating  it  as  a               hostname         p po os ss si ib bl le e   h ho os st tn na am me e   c co om mp pl le et ti io on ns s    c c   x x                      list the possible completions of the text before point  treating               it as a hostname         c co om mp pl le et te e   c co om mm ma an nd d    m m                        attempt completion on the text before point  treating  it  as  a               command  name    command  completion  attempts to match the text               against  aliases   reserved  words    shell   functions    shell               builtins  and finally executable filenames  in that order         p po os ss si ib bl le e   c co om mm ma an nd d   c co om mp pl le et ti io on ns s    c c   x x                      list the possible completions of the text 
before point  treating               it as a command name         d dy yn na am mi ic c   c co om mp pl le et te e   h hi is st to or ry y    m m   t ta ab b                  attempt completion on the text before point  comparing the  text               against  lines  from  the  history  list for possible completion               matches         c co om mp pl le et te e   i in nt to o   b br ra ac ce es s    m m                        perform filename completion and insert the list of possible com                pletions  enclosed within braces so the list is available to the               shell  see b br ra ac ce e e ex xp pa an ns si io on n above      k ke ey yb bo oa ar rd d m ma ac cr ro os s        s st ta ar rt t   k kb bd d   m ma ac cr ro o    c c   x x                      begin saving the characters  typed  into  the  current  keyboard               macro         e en nd d   k kb bd d   m ma ac 
cr ro o    c c   x x                      stop saving the characters typed into the current keyboard macro               and store the definition         c ca al ll l   l la as st t   k kb bd d   m ma ac cr ro o    c c   x x e e                  re execute the last keyboard macro defined  by making the  char                acters in the macro appear as if typed at the keyboard     m mi is sc ce el ll la an ne eo ou us s        r re e   r re ea ad d   i in ni it t   f fi il le e    c c   x x c c   r r                  read  in  the  contents of the   i  n  p  u  t  r  c file  and incorporate any               bindings or variable assignments found there         a ab bo or rt t    c c   g g                  abort the current editing command and ring the  terminal s  bell                subject to the setting of b be el ll l   s st ty yl le e          d do o   u up pp pe er rc ca as se e   v ve er rs si io on n    m m   a a    m m   b b    m m     x                               if  the 
 metafied character   x is lowercase  run the command that               is bound to the corresponding uppercase character         p pr re ef fi ix x   m me et ta a    e es sc c                  metafy the next character typed   e es sc c f f is equivalent to m me et ta a   f f         u un nd do o    c c          c c   x x c c   u u                  incremental undo  separately remembered for each line         r re ev ve er rt t   l li in ne e    m m   r r                  undo  all changes made to this line   this is like executing the               u un nd do o command enough times to return  the  line  to  its  initial               state         t ti il ld de e   e ex xp pa an nd d    m m                        perform tilde expansion on the current word         s se et t   m ma ar rk k    c c          m m      s sp pa ac ce e                     set  the  mark to the point   if a numeric argument is supplied 
               the mark is set to that position         e ex xc ch ha an ng ge e   p po oi in nt t   a an nd d   m ma ar rk k    c c   x x c c   x x                  swap the point with the mark   the current  cursor  position  is               set  to the saved position  and the old cursor position is saved               as the mark         c ch ha ar ra ac ct te er r   s se ea ar rc ch h    c c                        a character is read and point is moved to the next occurrence of               that  character    a negative count searches for previous occur                rences         c ch ha ar ra ac ct te er r   s se ea ar rc ch h   b ba ac ck kw wa ar rd d    m m   c c                        a character is read and point is moved to  the  previous  occur                rence  of  that character   a negative count searches for subse                quent occurrences         i in ns se er rt t   c co om mm me en nt t    m m                        without a numeric argument   the 
 value  of  the  readline  c co om m                  m me en nt t   b be eg gi in n  variable is inserted at the beginning of the current               line   if a numeric argument is supplied  this command acts as a               toggle    if  the characters at the beginning of the line do not               match the value of c co om mm me en nt t   b be eg gi in n  the value is inserted   other                wise the characters in c co om mm me en nt t   b be eg gi in n are deleted from the begin                ning of the line   in either case  the line is accepted as if  a               newline  had  been  typed    the  default value of c co om mm me en nt t   b be eg gi in n               causes this command to make the current line  a  shell  comment                if  a  numeric  argument  causes  the  comment  character  to be               removed  the line will be executed by the shell         g gl lo ob b   c co om mp pl le et te e   w wo or rd d    m m   g g         
         the word before point is  treated  as  a  pattern  for  pathname               expansion   with  an asterisk implicitly appended   this pattern               is used to generate a list of matching file names  for  possible               completions         g gl lo ob b   e ex xp pa an nd d   w wo or rd d    c c   x x                      the  word  before  point  is  treated  as a pattern for pathname               expansion  and the list of  matching  file  names  is  inserted                replacing  the  word    if  a  numeric  argument is supplied  an               asterisk is appended before pathname expansion         g gl lo ob b   l li is st t   e ex xp pa an ns si io on ns s    c c   x x g g                  the list  of  expansions  that  would  have  been  generated  by               g gl lo ob b   e ex xp pa an nd d   w wo or rd d  is  displayed   and the line is redrawn   if a               numeric argument is supplied  an  asterisk  is  appended  before  
             pathname expansion         d du um mp p   f fu un nc ct ti io on ns s               print  all  of the functions and their key bindings to the read                line output stream   if a numeric argument is supplied  the out                put  is  formatted  in such a way that it can be made part of an                 i  n  p  u  t  r  c file         d du um mp p   v va ar ri ia ab bl le es s               print all of the settable readline variables and their values to               the  readline output stream   if a numeric argument is supplied                the output is formatted in such a way that it can be  made  part               of an   i  n  p  u  t  r  c file         d du um mp p   m ma ac cr ro os s               print  all of the readline key sequences bound to macros and the               strings they output   if a numeric  argument  is  supplied   the               output is formatted in such a way that it can be made part of an            
     i  n  p  u  t  r  c file         d di is sp pl la ay y   s sh he el ll l   v ve er rs si io on n    c c   x x c c   v v                  display version information about the current instance of  b ba as sh h     p pr ro og gr ra am mm ma ab bl le e c co om mp pl le et ti io on n        when  word  completion  is  attempted  for an argument to a command for        which a completion specification  a   c  o  m  p  s  p  e  c  has  been  defined  using        the  c co om mp pl le et te e  builtin   see  s sh he el ll l  b bu ui il lt ti in n  c co om mm ma an nd ds s below   the pro         grammable completion facilities are invoked         first  the command name is identified   if a compspec has been  defined        for that command  the compspec is used to generate the list of possible        completions for the word   if the command word is a  full  pathname   a        compspec  for  the full pathname 
is searched for first   if no compspec        is found for the full pathname  an attempt is made to find  a  compspec        for the portion following the final slash         once  a  compspec  has  been  found  it is used to generate the list of        matching words   if a compspec is not found  the default  b ba as sh h  comple         tion as described above under c co om mp pl le et ti in ng g is performed          first   the  actions  specified by the compspec are used   only matches        which are prefixed by the word being completed are returned   when  the           f f  or    d d option is used for filename or directory name completion  the        shell variable f fi ig gn no or re e is used to filter the matches         any completions specified by a filename expansion  pattern  to  the     g g        option are generated next   the words generated by the pattern need not        match the word being completed   the g gl lo ob bi ig gn no or re e shell variable  is  not 
       used to filter the matches  but the f fi ig gn no or re e variable is used         next   the string specified as the argument to the    w w option is consid         ered   the string is first split using the characters in the  i if fs s  spe         cial  variable  as delimiters   shell quoting is honored   each word is        then expanded using brace expansion   tilde  expansion   parameter  and        variable  expansion  command substitution  and arithmetic expansion  as        described above under e ex xp pa an ns si io on n   the results are split using the rules        described above under w wo or rd d s sp pl li it tt ti in ng g   the results of the expansion are        prefix matched against the word being completed  and the matching words        become the possible completions         after  these matches have been generated  any shell function or command        specified with the    f 
f and    c c options is invoked   when the  command  or        function  is  invoked   the  c co om mp p   l li in ne e  and  c co om mp p   p po oi in nt t  variables  are        assigned values as described above under s sh he el ll l v va ar ri ia ab bl le es s   if  a  shell        function  is being invoked  the c co om mp p   w wo or rd ds s and c co om mp p   c cw wo or rd d variables are        also set   when the function or command is invoked  the first  argument        is  the  name  of  the command whose arguments are being completed  the        second argument is the word being completed  and the third argument  is        the  word  preceding  the  word  being completed on the current command        line   no filtering of the generated completions against the word being        completed is performed  the function or command has complete freedom in        generating the matches         any function 
specified with    f f is invoked first   the function may  use        any  of  the  shell facilities  including the c co om mp pg ge en n builtin described        below  to generate the matches   it must put the  possible  completions        in the c co om mp pr re ep pl ly y array variable         next   any  command specified with the    c c option is invoked in an envi         ronment equivalent to command substitution   it should print a list  of        completions   one  per  line  to the standard output   backslash may be        used to escape a newline  if necessary         after all of the possible completions are generated  any filter  speci         fied  with  the    x x option is applied to the list   the filter is a pat         tern as used for pathname expansion  a     in  the  pattern  is  replaced        with  the text of the word being completed   a literal     may be escaped        with a backslash 
 the backslash is removed before attempting  a  match         any  completion that matches the pattern will be removed from the list         a leading     negates the pattern  in this case any completion not match         ing the pattern will be removed         finally  any prefix and suffix specified with the    p p and    s s options are        added to each member of the completion list  and the result is returned        to the readline completion code as the list of possible completions         if  the previously applied actions do not generate any matches  and the           o o d di ir rn na am me es s option was supplied  to  c co om mp pl le et te e  when  the  compspec  was        defined  directory name completion is attempted         if  the     o o  p pl lu us sd di ir rs s option was supplied to c co om mp pl le et te e when the compspec        was defined  directory name completion is attempted 
and any matches are        added to the results of the other actions         by  default   if a compspec is found  whatever it generates is returned        to the completion code as the full set of  possible  completions    the        default b ba as sh h completions are not attempted  and the readline default of        filename completion is disabled   if the    o o b ba as sh hd de ef fa au ul lt t option was sup         plied  to c co om mp pl le et te e when the compspec was defined  the b ba as sh h default com         pletions are attempted if the compspec generates no matches   if the    o o        d de ef fa au ul lt t  option was supplied to c co om mp pl le et te e when the compspec was defined         readline s default completion will be performed if the  compspec   and         if attempted  the default b ba as sh h completions  generate no matches         when  a  compspec  indicates that directory 
name completion is desired         the programmable completion functions force readline to append a  slash        to  completed names which are symbolic links to directories  subject to        the value of the m ma ar rk k   d di ir re ec ct to or ri ie es s readline variable  regardless of  the        setting of the m ma ar rk k   s sy ym ml li in nk ke ed d   d di ir re ec ct to or ri ie es s readline variable  h hi is st to or ry y        when  the     o o  h hi is st to or ry y  option to the s se et t builtin is enabled  the shell        provides access to the   c  o  m  m  a  n  d   h  i  s  t  o  r  y  the list of commands previously        typed    the  value  of  the h hi is st ts si iz ze e variable is used as the number of        commands to save in a history list   the text of the last h hi is st ts si iz ze e com         mands   default        is  saved   the shell stores each command in the        history list prior to parameter and variable expansion   see  e ex xp pa an 
ns si io on n        above   but after history expansion is performed  subject to the values        of the shell variables h hi is st ti ig gn no or re e and h hi is st tc co on nt tr ro ol l         on startup  the history is initialized from the file named by the vari         able  h hi is st tf fi il le e   default            b  a  s  h     h  i  s  t  o  r  y    the file named by the value        of h hi is st tf fi il le e is truncated  if necessary  to contain  no  more  than  the        number of lines specified by the value of h hi is st tf fi il le es si iz ze e   when an inter         active shell exits  the last    h hi is st ts si iz ze e lines are copied from  the  his         tory list to    h hi is st tf fi il le e   if the h hi is st ta ap pp pe en nd d shell option is enabled  see        the description of s sh ho op pt t under s sh he el ll l b bu ui il lt ti in n c co om mm ma an nd 
ds s below   the lines        are  appended  to the history file  otherwise the history file is over         written   if h hi is st tf fi il le e is unset  or if the history file  is  unwritable         the  history  is not saved   after saving the history  the history file        is truncated to contain no more than h hi is st tf fi il le es si iz ze e lines   if  h hi is st tf fi il le e           s si iz ze e is not set  no truncation is performed         the  builtin  command f fc c  see s sh he el ll l b bu ui il lt ti in n c co om mm ma an nd ds s below  may be used        to list or edit and re execute a portion of the history list   the h hi is s           t to or ry y  builtin  may  be  used  to display or modify the history list and        manipulate the history file   when using command line  editing   search        commands  are available in each editing mode that provide access to the       
 history list         the shell allows control over which commands are saved on  the  history        list   the h hi is st tc co on nt tr ro ol l and h hi is st ti ig gn no or re e variables may be set to cause the        shell to save only a subset of the commands entered   the c cm md dh hi is st t shell        option   if enabled  causes the shell to attempt to save each line of a        multi line command in the same history entry  adding  semicolons  where        necessary  to preserve syntactic correctness   the l li it th hi is st t shell option        causes the shell to save the command with embedded newlines instead  of        semicolons   see the description of the s sh ho op pt t builtin below under s sh he el ll l        b bu ui il lt ti in n  c co om mm ma an nd ds s  for  information  on  setting  and  unsetting  shell        options  h hi is st to or ry y e ex xp pa an ns si io on n        the  shell 
 supports a history expansion feature that is similar to the        history expansion in c cs sh h     this section describes what syntax  features        are  available    this  feature  is  enabled by default for interactive        shells  and can be disabled using the    h h option to the s se et t builtin com         mand  see s sh he el ll l b bu ui il lt ti in n c co om mm ma an nd ds s below    non interactive shells do not        perform history expansion by default         history expansions introduce words from the history list into the input        stream   making  it  easy to repeat commands  insert the arguments to a        previous command into the current input line  or fix errors in previous        commands quickly         history  expansion  is  performed  immediately after a complete line is        read  before the shell breaks it into words   it  takes  place  in  two        parts    the  first is to 
determine which line from the history list to        use during substitution   the second is to select portions of that line        for inclusion into the current one   the line selected from the history        is the   e  v  e  n  t  and the portions of that line that  are  acted  upon  are          w  o  r  d  s    various    m  o  d  i  f  i  e  r  s  are  available  to manipulate the selected        words   the line is broken into words in the same fashion as when read         ing  input  so that several   m  e  t  a  c  h  a  r  a  c  t  e  r separated words surrounded by        quotes are considered one word   history expansions are  introduced  by        the  appearance  of  the  history  expansion  character   which is     by        default   only backslash       and single quotes can  quote  the  history        expansion character         several  characters inhibit history expansion if found 
immediately fol         lowing the history expansion character  even if it is unquoted   space         tab   newline   carriage return  and       if the e ex xt tg gl lo ob b shell option is        enabled      will also inhibit expansion         several shell options settable with the s sh ho op pt t builtin may  be  used  to        tailor  the  behavior  of  history  expansion   if the h hi is st tv ve er ri if fy y shell        option is enabled  see the description of the s sh ho op pt t builtin   and r re ea ad d           l li in ne e is being used  history substitutions are not immediately passed to        the shell parser   instead  the expanded  line  is  reloaded  into  the        r re ea ad dl li in ne e editing buffer for further modification   if r re ea ad dl li in ne e is being        used  and the h hi is st tr re ee ed di it t shell option is enabled  a failed history sub         stitution will be reloaded 
into the r re ea ad dl li in ne e editing buffer for correc         tion   the    p p option to the h hi is st to or ry y builtin command may be used to  see        what a history expansion will do before using it   the    s s option to the        h hi is st to or ry y builtin may be used to add commands to the end of  the  history        list  without  actually  executing them  so that they are available for        subsequent recall         the shell allows control of the various characters used by the  history        expansion mechanism  see the description of h hi is st tc ch ha ar rs s above under s sh he el ll l        v va ar ri ia ab bl le es s      e ev ve en nt t d de es si ig gn na at to or rs s        an event designator is a reference to a command line entry in the  his         tory list                  start  a  history substitution  except when followed by a b bl la an nk k                newline  carriage 
return    or    when the e ex xt tg gl lo ob b shell  option               is enabled using the s sh ho op pt t builtin               n     refer to command line   n                 n    refer to the current command line minus   n                    refer to the previous command   this is a synonym for                    s  t  r  i  n  g               refer to the most recent command starting with   s  t  r  i  n  g                 s  t  r  i  n  g                        refer  to the most recent command containing   s  t  r  i  n  g   the trail                ing     may be omitted if   s  t  r  i  n  g is followed immediately by a new                line              s  t  r  i  n  g        s  t  r  i  n  g                     quick  substitution   repeat the last command  replacing   s  t  r  i  n  g                  with   s  t  r  i  n  g      equivalent to      s   s  t  r  i  n  g      s  t  r  i  n  g 
       see m mo od d                  i if fi ie er rs s below                     the entire command line typed so far     w wo or rd d d de es si ig gn na at to or rs s        word  designators are used to select desired words from the event   a            separates the event specification from the word designator   it may  be        omitted  if  the word designator begins with a                     or       words        are numbered from the beginning of the line  with the first word  being        denoted  by      zero    words are inserted into the current line sepa         rated by single spaces                z ze er ro o                  the zeroth word   for the shell  this is the command word           n      the   nth word                  the first argument   that is  word                    the last argument                  the word matched by the most recent     s  t  r  i  n  g   search           x     y    a range of words      y  abbreviates      y                  
 all of the words but the zeroth   this is a synonym  for                             it  is  not  an  error to use     if there is just one word in the               event  the empty string is returned in that case         x x        abbreviates   x               x x        abbreviates   x       like x x     but omits the last word         if a word designator is supplied without an  event  specification   the        previous command is used as the event     m mo od di if fi ie er rs s        after  the optional word designator  there may appear a sequence of one        or more of the following modifiers  each preceded by a             h h      remove a trailing file name component  leaving only the head         t t      remove all leading file name components  leaving the tail         r r      remove a trailing suffix of the form      x  x  x  leaving the basename         e e      remove all but the trailing 
suffix         p p      print the new command but do not execute it         q q      quote the substituted words  escaping further substitutions         x x      quote  the  substituted words as with q q  but break into words at               b bl la an nk ks s and newlines         s s     o  l  d     n  e  w                  substitute   n  e  w for the first occurrence  of    o  l  d  in  the  event               line    any  delimiter  can  be  used  in place of     the final               delimiter is optional if it is the last character of  the  event               line    the delimiter may be quoted in   o  l  d and   n  e  w with a single               backslash   if   appears in   n  e  w  it is replaced by   o  l  d   a  sin                gle  backslash  will  quote the     if   o  l  d is null  it is set to               the last   o  l  d substituted  or  if no previous  history  substitu                tions took 
place  the last   s  t  r  i  n  g in a         s  t  r  i  n  g           search                  repeat the previous substitution         g g      cause changes to be applied over the entire event line   this is               used in conjunction with     s s   e g        g gs s     o  l  d     n  e  w       or                          if  used with     s s   any delimiter can be used in place of    and               the final delimiter is optional if it is the last  character  of               the event line   an a a may be used as a synonym for g g         g g      apply  the following  s s  modifier once to each word in the event               line   s sh he el ll l b bu ui il lt ti in n c co om mm ma an nd ds s        unless otherwise noted  each builtin command documented in this section        as accepting options preceded by     accepts        to signify the end of the        options   for example  the      t tr ru ue e  f fa al ls se e  and  t te es st t  builtins  do  not     
   accept options                a  r  g  u  m  e  n  t  s                no  effect   the command does nothing beyond expanding   a  r  g  u  m  e  n  t  s               and performing any specified redirections   a zero exit code  is               returned                 f  i  l  e  n  a  m  e    a  r  g  u  m  e  n  t  s         s so ou ur rc ce e   f  i  l  e  n  a  m  e    a  r  g  u  m  e  n  t  s                read  and  execute  commands  from   f  i  l  e  n  a  m  e in the current shell               environment and return the exit status of the last command  exe                cuted from   f  i  l  e  n  a  m  e   if   f  i  l  e  n  a  m  e does not contain a slash  file               names in p pa at th h are used to find the  directory  containing    f  i  l  e                    n  a  m  e    the  file  searched  for in p pa at th h need not be executable                when b ba as sh h is  not 
 in    p  o  s  i  x    m  o  d  e   the  current  directory  is               searched  if no file is found in p pa at th h   if the s so ou ur rc ce ep pa at th h option               to the s sh ho op pt t builtin command is turned  off   the  p pa at th h  is  not               searched    if any   a  r  g  u  m  e  n  t  s are supplied  they become the posi                tional parameters when    f  i  l  e  n  a  m  e  is  executed    otherwise  the               positional  parameters  are unchanged   the return status is the               status of the last command exited within the  script      if  no               commands  are  executed    and false if   f  i  l  e  n  a  m  e is not found or               cannot be read         a al li ia as s     p p     n  a  m  e    v  a  l  u  e                     a al li ia as s with no arguments or with the    p p option prints the list of               aliases 
 in  the form a al li ia as s   n  a  m  e   v  a  l  u  e on standard output   when               arguments are supplied  an alias is defined for each   n  a  m  e  whose                 v  a  l  u  e is given   a trailing space in    v  a  l  u  e causes the next word               to be checked for alias substitution when the alias is expanded                for  each    n  a  m  e  in the argument list for which no   v  a  l  u  e is sup                plied  the name and  value  of  the  alias  is  printed    a al li ia as s               returns  true unless a   n  a  m  e is given for which no alias has been               defined         b bg g    j  o  b  s  p  e  c                    resume each suspended job   j  o  b  s  p  e  c in the background   as  if  it               had been started with       if   j  o  b  s  p  e  c is not present  the shell s               notion of the   c  u  r  r  e  n  t   j  o  b is used   b bg g   j  o  b  s  p  e  c returns    unless        
       run  when  job control is disabled or  when run with job control               enabled  any specified   j  o  b  s  p  e  c was  not  found  or  was  started               without job control         b bi in nd d     m m   k  e  y  m  a  p      l lp ps sv vp ps sv v         b bi in nd d     m m   k  e  y  m  a  p      q q   f  u  n  c  t  i  o  n      u u   f  u  n  c  t  i  o  n      r r   k  e  y  s  e  q         b bi in nd d     m m   k  e  y  m  a  p     f f   f  i  l  e  n  a  m  e        b bi in nd d     m m   k  e  y  m  a  p     x x   k  e  y  s  e  q   s  h  e  l  l     c  o  m  m  a  n  d        b bi in nd d     m m   k  e  y  m  a  p    k  e  y  s  e  q   f  u  n  c  t  i  o  n     n  a  m  e        b bi in nd d   r  e  a  d  l  i  n  e     c  o  m  m  a  n  d               display  current  r re ea ad dl li in ne e key and function bindings  bind a key               sequence to a r re ea ad dl li in ne e function or  macro   or  set  a  r re ea ad dl li in ne 
e               variable    each  non option  argument  is a command as it would               appear in      i  n  p  u  t  r  c  but each binding or command must  be  passed               as  a  separate argument  e g      c x c r   re read init file                 options  if supplied  have the following meanings                   m m   k  e  y  m  a  p                      use   k  e  y  m  a  p as the keymap to be affected by the subsequent                      bindings   acceptable   k  e  y  m  a  p names are   e  m  a  c  s      e  m  a  c  s     s  t  a  n                           d  a  r  d      e  m  a  c  s     m  e  t  a      e  m  a  c  s     c  t  l  x       v  i       v  i     m  o  v  e       v  i     c  o  m  m  a  n  d                       and    v  i     i  n  s  e  r  t     v  i is equivalent to   v  i     c  o  m  m  a  n  d    e  m  a  c  s is                      equivalent to   e  m  a  c  s     s  t  a  n  d  a  r  d                   l l     list the names 
of all r re ea ad dl li in ne e functions                   p p     display r re ea ad dl li in ne e function names and bindings  in  such  a                      way that they can be re read                   p p     list current r re ea ad dl li in ne e function names and bindings                   v v     display  r re ea ad dl li in ne e variable names and values in such a way                      that they can be re read                   v v     list current r re ea ad dl li in ne e variable names and values                   s s     display r re ea ad dl li in ne e key sequences bound to  macros  and  the                      strings  they  output  in such a way that they can be re                       read                   s s     display r re ea ad dl li in ne e key sequences bound to  macros  and  the                      strings they output                   f f   f  i  l  e  n  a  m  e             
         read key bindings from   f  i  l  e  n  a  m  e                   q q   f  u  n  c  t  i  o  n                      query about which keys invoke the named   f  u  n  c  t  i  o  n                   u u   f  u  n  c  t  i  o  n                      unbind all keys bound to the named   f  u  n  c  t  i  o  n                   r r   k  e  y  s  e  q                      remove any current binding for   k  e  y  s  e  q                   x x   k  e  y  s  e  q     s  h  e  l  l     c  o  m  m  a  n  d                      cause    s  h  e  l  l     c  o  m  m  a  n  d  to  be  executed whenever   k  e  y  s  e  q is                      entered                the return value is   unless an unrecognized option is given  or               an error occurred         b br re ea ak k    n                exit  from  within a f fo or r  w wh hi il le e  u un nt ti il l  or s se el le ec ct t loop   if   n is               specified  break   n levels     n must be         if    
n  is  greater               than  the  number  of  enclosing  loops  all enclosing loops are               exited   the return value is   unless the shell is not executing               a loop when b br re ea ak k is executed         b bu ui il lt ti in n   s  h  e  l  l     b  u  i  l  t  i  n    a  r  g  u  m  e  n  t  s                execute  the  specified shell builtin  passing it   a  r  g  u  m  e  n  t  s  and               return its exit status   this is useful when defining a function               whose  name  is the same as a shell builtin  retaining the func                tionality of the builtin within the function   the c cd d builtin is               commonly  redefined  this  way    the  return status is false if                 s  h  e  l  l     b  u  i  l  t  i  n is not a shell builtin command          c cd d     l l      p p     d  i  r                change the current directory to   d  i  r   the variable h ho om me e  is  the               default    d  i  r 
